{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../node_modules/regexparam/dist/index.mjs","../../src/stores.js","../../src/loginService.js","../../src/routes/AddUser.svelte","../../src/fileDbHandling.js","../../src/roles/Admin.svelte","../../src/roles/Professional.svelte","../../src/roles/User.svelte","../../src/routes/Home.svelte","../../src/routes/About.svelte","../../src/routes/Login.svelte","../../src/file-handler.js","../../src/routes/AddProgram.svelte","../../src/routes/ModProfessional.svelte","../../src/routes/ModUser.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","<script context=\"module\">\nimport {readable, writable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\nimport {wrap as _wrap} from './wrap'\n\n/**\n * Wraps a component to add route pre-conditions.\n * @deprecated Use `wrap` from `svelte-spa-router/wrap` instead. This function will be removed in a later version.\n * \n * @param {SvelteComponent} component - Svelte component for the route\n * @param {object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...function(RouteDetail): boolean} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(component, userData, ...conditions) {\n    // Use the new wrap method and show a deprecation warning\n    // eslint-disable-next-line no-console\n    console.warn('Method `wrap` from `svelte-spa-router` is deprecated and will be removed in a future version. Please use `svelte-spa-router/wrap` instead. See http://bit.ly/svelte-spa-router-upgrading')\n    return _wrap({\n        component,\n        userData,\n        conditions\n    })\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Store that returns the currently-matched params.\n * Despite this being writable, consumers should not change the value of the store.\n * It is exported as a readable store only (in the typings file)\n */\nexport const params = writable(undefined)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    // Note: this will include scroll state in history even when restoreScrollState is false\n    history.replaceState({...history.state, __svelte_spa_router_scrollX: window.scrollX, __svelte_spa_router_scrollY: window.scrollY}, undefined)      \n    window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function pop() {\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    window.history.back()\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    const dest = (location.charAt(0) == '#' ? '' : '#') + location\n    try {\n        const newState = {\n            ...history.state\n        }\n        delete newState['__svelte_spa_router_scrollX']\n        delete newState['__svelte_spa_router_scrollY']\n        window.history.replaceState(newState, undefined, dest)\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n    }\n\n    // The method above doesn't trigger the hashchange event, so let's do that manually\n    window.dispatchEvent(new Event('hashchange'))\n}\n\n/**\n * Dictionary with options for the link action.\n * @typedef {Object} LinkActionOpts\n * @property {string} href - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n * @property {boolean} disabled - If true, link is disabled\n */\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string|LinkActionOpts} opts - Options object. For legacy reasons, we support a string too which will be the value for opts.href\n */\nexport function link(node, opts) {\n    opts = linkOpts(opts)\n\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, opts)\n\n    return {\n        update(updated) {\n            updated = linkOpts(updated)\n            updateLink(node, updated)\n        }\n    }\n}\n\n/**\n * Tries to restore the scroll state from the given history state.\n *\n * @param {{__svelte_spa_router_scrollX: number, __svelte_spa_router_scrollY: number}} [state] - The history state to restore from.\n */\nexport function restoreScroll(state) {\n    // If this exists, then this is a back navigation: restore the scroll position\n    if (state) {\n        window.scrollTo(state.__svelte_spa_router_scrollX, state.__svelte_spa_router_scrollY)\n    }\n    else {\n        // Otherwise this is a forward navigation: scroll to top\n        window.scrollTo(0, 0)\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, opts) {\n    let href = opts.href || node.getAttribute('href')\n\n    // Destination must start with '/' or '#/'\n    if (href && href.charAt(0) == '/') {\n        // Add # to the href attribute\n        href = '#' + href\n    }\n    else if (!href || href.length < 2 || href.slice(0, 2) != '#/') {\n        throw Error('Invalid value for \"href\" attribute: ' + href)\n    }\n\n    node.setAttribute('href', href)\n    node.addEventListener('click', (event) => {\n        // Prevent default anchor onclick behaviour\n        event.preventDefault()\n        if (!opts.disabled) {\n            scrollstateHistoryHandler(event.currentTarget.getAttribute('href'))\n        }\n    })\n}\n\n// Internal function that ensures the argument of the link action is always an object\nfunction linkOpts(val) {\n    if (val && typeof val == 'string') {\n        return {\n            href: val\n        }\n    }\n    else {\n        return val || {}\n    }\n}\n\n/**\n * The handler attached to an anchor tag responsible for updating the\n * current history state with the current scroll state\n *\n * @param {string} href - Destination\n */\nfunction scrollstateHistoryHandler(href) {\n    // Setting the url (3rd arg) to href will break clicking for reasons, so don't try to do that\n    history.replaceState({...history.state, __svelte_spa_router_scrollX: window.scrollX, __svelte_spa_router_scrollY: window.scrollY}, undefined)\n    // This will force an update as desired, but this time our scroll state will be attached\n    window.location.hash = href\n}\n</script>\n\n{#if componentParams}\n    <svelte:component\n    this=\"{component}\"\n    params=\"{componentParams}\"\n    on:routeEvent\n    {...props}\n    />\n{:else}\n    <svelte:component\n    this=\"{component}\"\n    on:routeEvent\n    {...props}\n    />\n{/if}\n\n<script>\nimport {onDestroy, createEventDispatcher, afterUpdate} from 'svelte'\nimport {parse} from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * If set to true, the router will restore scroll positions on back navigation\n * and scroll to top on forward navigation.\n */\nexport let restoreScrollState = false\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent|WrappedComponent} component - Svelte component for the route, optionally wrapped\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument - strings must start with / or *')\n        }\n\n        const {pattern, keys} = parse(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.component\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n            this.props = component.props || {}\n        }\n        else {\n            // Convert the component to a function that returns a Promise, to normalize it\n            this.component = () => Promise.resolve(component)\n            this.conditions = []\n            this.props = {}\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, check if it matches the start of the path.\n        // If not, bail early, else remove it before we run the matching.\n        if (prefix) {\n            if (typeof prefix == 'string') {\n                if (path.startsWith(prefix)) {\n                    path = path.substr(prefix.length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n            else if (prefix instanceof RegExp) {\n                const match = path.match(prefix)\n                if (match && match[0]) {\n                    path = path.substr(match[0].length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            // In the match parameters, URL-decode all values\n            try {\n                out[this._keys[i]] = decodeURIComponent(matches[i + 1] || '') || null\n            }\n            catch (e) {\n                out[this._keys[i]] = null\n            }\n            i++\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoading`, `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {string|RegExp} route - Route matched as defined in the route definition (could be a string or a reguar expression object)\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {object} [userData] - Custom data passed by the user\n     * @property {SvelteComponent} [component] - Svelte component (only in `routeLoaded` events)\n     * @property {string} [name] - Name of the Svelte component (only in `routeLoaded` events)\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {boolean} Returns true if all the conditions succeeded\n     */\n    async checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!(await this.conditions[i](detail))) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\nlet props = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nasync function dispatchNextTick(name, detail) {\n    // Execute this code when the current call stack is complete\n    await tick()\n    dispatch(name, detail)\n}\n\n// If this is set, then that means we have popped into this var the state of our last scroll position\nlet previousScrollState = null\n\n// Update history.scrollRestoration depending on restoreScrollState\n$: history.scrollRestoration = restoreScrollState ? 'manual' : 'auto'\nlet popStateChanged = null\nif (restoreScrollState) {\n    popStateChanged = (event) => {\n        // If this event was from our history.replaceState, event.state will contain\n        // our scroll history. Otherwise, event.state will be null (like on forward\n        // navigation)\n        if (event.state && (event.state.__svelte_spa_router_scrollY || event.state.__svelte_spa_router_scrollX)) {\n            previousScrollState = event.state\n        }\n        else {\n            previousScrollState = null\n        }\n    }\n    // This is removed in the destroy() invocation below\n    window.addEventListener('popstate', popStateChanged)\n\n    afterUpdate(() => {\n        restoreScroll(previousScrollState)\n    })\n}\n\n// Always have the latest value of loc\nlet lastLoc = null\n\n// Current object of the component loaded\nlet componentObj = null\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n// Do not use the $: syntax because it gets triggered by too many things\nconst unsubscribeLoc = loc.subscribe(async (newLoc) => {\n    lastLoc = newLoc\n\n    // Find a route matching the location\n    let i = 0\n    while (i < routesList.length) {\n        const match = routesList[i].match(newLoc.location)\n        if (!match) {\n            i++\n            continue\n        }\n\n        const detail = {\n            route: routesList[i].path,\n            location: newLoc.location,\n            querystring: newLoc.querystring,\n            userData: routesList[i].userData,\n            params: (match && typeof match == 'object' && Object.keys(match).length) ? match : null\n        }\n\n        // Check if the route can be loaded - if all conditions succeed\n        if (!(await routesList[i].checkConditions(detail))) {\n            // Don't display anything\n            component = null\n            componentObj = null\n            // Trigger an event to notify the user, then exit\n            dispatchNextTick('conditionsFailed', detail)\n            return\n        }\n\n        // Trigger an event to alert that we're loading the route\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoading', Object.assign({}, detail))\n\n        // If there's a component to show while we're loading the route, display it\n        const obj = routesList[i].component\n        // Do not replace the component if we're loading the same one as before, to avoid the route being unmounted and re-mounted\n        if (componentObj != obj) {\n            if (obj.loading) {\n                component = obj.loading\n                componentObj = obj\n                componentParams = obj.loadingParams\n                props = {}\n\n                // Trigger the routeLoaded event for the loading component\n                // Create a copy of detail so we don't modify the object for the dynamic route (and the dynamic route doesn't modify our object too)\n                dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n                    component: component,\n                    name: component.name,\n                    params: componentParams\n                }))\n            }\n            else {\n                component = null\n                componentObj = null\n            }\n\n            // Invoke the Promise\n            const loaded = await obj()\n\n            // Now that we're here, after the promise resolved, check if we still want this component, as the user might have navigated to another page in the meanwhile\n            if (newLoc != lastLoc) {\n                // Don't update the component, just exit\n                return\n            }\n\n            // If there is a \"default\" property, which is used by async routes, then pick that\n            component = (loaded && loaded.default) || loaded\n            componentObj = obj\n        }\n\n        // Set componentParams only if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n        // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n        if (match && typeof match == 'object' && Object.keys(match).length) {\n            componentParams = match\n        }\n        else {\n            componentParams = null\n        }\n\n        // Set static props, if any\n        props = routesList[i].props\n\n        // Dispatch the routeLoaded event then exit\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n            component: component,\n            name: component.name,\n            params: componentParams\n        })).then(() => {\n            params.set(componentParams)\n        })\n        return\n    }\n\n    // If we're still here, there was no match, so show the empty component\n    component = null\n    componentObj = null\n    params.set(undefined)\n})\n\nonDestroy(() => {\n    unsubscribeLoc()\n    popStateChanged && window.removeEventListener('popstate', popStateChanged)\n})\n</script>\n","export function parse(str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n\nvar RGX = /*#__PURE__*/ /(\\/|^)([:*][^/]*?)(\\?)?(?=[/.]|$)/g;\n\n// error if key missing?\nexport function inject(route, values) {\n\treturn route.replace(RGX, (x, lead, key, optional) => {\n\t\tx = values[key=='*' ? 'wild' : key.substring(1)];\n\t\treturn x ? '/'+x : (optional || key=='*') ? '' : '/' + key;\n\t});\n}\n","import {writable} from 'svelte/store'\r\nexport const currentUser = writable(\r\n\t{\r\n\t\t\"user_role\": \"ROLE_User\",\r\n\t\t\"user_id\": \"3\",\r\n\t\t\"user_name\": \"Test\",\r\n\t\t\"loggedIn\": false\r\n\t}\r\n);\r\nexport const files = writable(['files']);\r\nexport const programs = writable(['programs']);\r\nexport const currentProfile = writable(\r\n\t{\r\n\t\t\"name\": \" \",\r\n    \t\"surname\": \" \",\r\n\r\n\t}\r\n);\r\n\r\n\r\nexport const allUsers = writable([{\r\n\tname: \" \",\r\n\tsurname: \" \"\r\n}]);\r\n\r\n\r\nexport const altProfile = writable({});\r\n\r\n\r\nexport const allProfs = writable([{\r\n\tname: \" \",\r\n\tsurname: \" \"\r\n}]);\r\n\r\n\r\nexport const allSuperProfs = writable([{\r\n\tname: \" \",\r\n\tsurname: \" \"\r\n}]);\r\n\r\nexport const allAdmins = writable([{\r\n\tname: \" \",\r\n\tsurname: \" \"\r\n}]);\r\n\r\n\r\n\r\n\r\nexport const allProgs = writable([{\r\n\tname: \" \",\r\n}]);\r\n\r\nexport const profProgs = writable([{\r\n\tname: \" \",\r\n}]);\r\n\r\nexport const addingStatus = writable(0);\r\n\r\n\r\n// File: store.js\r\n\r\n\r\n// Create writable stores for form fields\r\nexport const login = writable('');\r\nexport const pwd = writable('');\r\nexport const name = writable('');\r\nexport const surname = writable('');\r\nexport const phone = writable('');\r\nexport const email = writable('');\r\nexport const role = writable('');\r\nexport const gender = writable('');\r\nexport const dob = writable('');\r\nexport const address = writable('');\r\nexport const pocode = writable('');\r\n\r\nexport const filteredUserArray = writable([]);\r\nexport const filteredProfArray = writable([]);\r\nexport const filteredSuperProfArray = writable([]);\r\nexport const filteredAdminArray = writable([]);\r\nexport const filteredProgArray = writable([]);\r\n","import { get } from \"svelte/store\";\r\nimport { currentUser } from \"./stores\";\r\nimport { currentProfile } from \"./stores\";\r\nimport { login, pwd, name, surname, phone, email, role, gender, dob, address, pocode } from './stores.js';\r\n\r\nexport async function loginUser(username, password) {\r\n  try {\r\n    const formData = new URLSearchParams();\r\n    formData.append('login', username);\r\n    formData.append('pwd', password);\r\n\r\n    const response = await fetch('https://inhealion.gr/api_2.php', {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      await getProfile(data.user_id);\r\n      try {\r\n        const roleMapping = {\r\n          ROLE_ADMIN: 'Administrator',\r\n          ROLE_PROFESSIONAL: 'Professional',\r\n          ROLE_SUPER_PROFESSIONAL: 'S. Professional',\r\n          ROLE_USER: 'User'\r\n        };\r\n      \r\n        if (data.hasOwnProperty('user_role')) {\r\n          const role = data.user_role;\r\n          if (role in roleMapping) {\r\n            data.user_role = roleMapping[role];\r\n          } else {\r\n            throw new Error(`Invalid user role: ${role}`);\r\n          }\r\n        } else {\r\n          throw new Error('user_role not found in data.');\r\n        }\r\n      \r\n        currentUser.set(data);\r\n      \r\n      } catch (error) {\r\n        console.error('Error:', error.message);\r\n        // Handle the error as per your requirements\r\n      }\r\n\r\n      \r\n      \r\n\r\n    } else {\r\n      const error = await response.text();\r\n      alert(error);\r\n    }\r\n  } catch (error) {\r\n    alert(\"Couldn't log In, Please Check your credentials and internet connection\");\r\n    console.error('Login Error:', error);\r\n    \r\n  }\r\n}\r\n\r\nexport function getProfile(id) {\r\n  return new Promise(async (resolve, reject) => {\r\n    const formData = new URLSearchParams();\r\n    formData.append('fetchprofilebyid', id);\r\n\r\n    try {\r\n      const response = await fetch('https://inhealion.gr/api_2.php', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        currentProfile.set(data);\r\n        //console.log(data);\r\n\r\n        resolve(data);\r\n      } else {\r\n        const error = await response.text();\r\n        reject(new Error(error));\r\n      }\r\n    } catch (error) {\r\n      console.error('Login Error:', error);\r\n      reject(new Error('Error Fetching Profile'));\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\nexport async function logout(username, password) {\r\n  try {\r\n    const formData = new URLSearchParams();\r\n    formData.append('logout', '0');\r\n    \r\n    const response = await fetch('https://inhealion.gr/api_2.php', {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n\r\n    if (response.ok) {\r\n      currentUser.set({\"loggedIn\": false});\r\n\r\n    } else {\r\n      const error = await response.text();\r\n      alert(error);\r\n    }\r\n  } catch (error) {\r\n    console.error('Logout Error:', error);\r\n    alert('An error occurred during logout.');\r\n  }\r\n}\r\n\r\n  // File: database.js\r\n\r\n\r\n  export async function signUp() {\r\n    let unsubscribeFunctions = [];\r\n  \r\n    let loginValue = '';\r\n    let pwdValue = '';\r\n    let nameValue = '';\r\n    let surnameValue = '';\r\n    let phoneValue = '';\r\n    let emailValue = '';\r\n    let roleValue = '';\r\n    let genderValue = '';\r\n    let dobValue = '';\r\n    let addressValue = '';\r\n    let pocodeValue = '';\r\n  \r\n    // Subscribe to the stores\r\n    const unsubscribeLogin = login.subscribe((value) => {\r\n      loginValue = value;\r\n    });\r\n    const unsubscribePwd = pwd.subscribe((value) => {\r\n      pwdValue = value;\r\n    });\r\n    const unsubscribeName = name.subscribe((value) => {\r\n      nameValue = value;\r\n    });\r\n    const unsubscribeSurname = surname.subscribe((value) => {\r\n      surnameValue = value;\r\n    });\r\n    const unsubscribePhone = phone.subscribe((value) => {\r\n      phoneValue = value;\r\n    });\r\n    const unsubscribeEmail = email.subscribe((value) => {\r\n      emailValue = value;\r\n    });\r\n    const unsubscribeRole = role.subscribe((value) => {\r\n      roleValue = value;\r\n    });\r\n    const unsubscribeGender = gender.subscribe((value) => {\r\n      genderValue = value;\r\n    });\r\n    const unsubscribeDob = dob.subscribe((value) => {\r\n      dobValue = value;\r\n    });\r\n    const unsubscribeAddress = address.subscribe((value) => {\r\n      addressValue = value;\r\n    });\r\n    const unsubscribePocode = pocode.subscribe((value) => {\r\n      pocodeValue = value;\r\n    });\r\n  \r\n    // Add the unsubscribe functions to the array\r\n    unsubscribeFunctions.push(\r\n      unsubscribeLogin,\r\n      unsubscribePwd,\r\n      unsubscribeName,\r\n      unsubscribeSurname,\r\n      unsubscribePhone,\r\n      unsubscribeEmail,\r\n      unsubscribeRole,\r\n      unsubscribeGender,\r\n      unsubscribeDob,\r\n      unsubscribeAddress,\r\n      unsubscribePocode\r\n    );\r\n  \r\n    // Log the values to the console\r\n    \r\n  \r\n    // Unsubscribe from the stores\r\n    unsubscribeFunctions.forEach((unsubscribe) => {\r\n      unsubscribe();\r\n    });\r\n  \r\n    // Send signup request using fetch\r\n    \r\n  \r\n    \r\n      const formData = new URLSearchParams();\r\n      formData.append('login', loginValue);\r\n      formData.append('pwd', pwdValue);\r\n      formData.append('name', nameValue);\r\n      formData.append('surname', surnameValue);\r\n      formData.append('phone', phoneValue);\r\n      formData.append('email', emailValue);\r\n      formData.append('role', roleValue);\r\n      formData.append('gender', genderValue);\r\n      formData.append('dob', dobValue);\r\n      formData.append('address', addressValue);\r\n      formData.append('post-code', pocodeValue);\r\n\r\n      \r\n\r\n      fetch('https://inhealion.gr/api_2.php/signup', {\r\n      method: 'POST',\r\n      body: formData\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          //console.log(response.text());\r\n          throw new Error(JSON.stringify({text: \"error encountered\", status: response.status}));\r\n\r\n        }\r\n\r\n        login.set(null);\r\n        pwd.set(null);\r\n        name.set(null);\r\n        surname.set(null);\r\n        phone.set(null);\r\n        email.set(null);\r\n        role.set(null);\r\n        gender.set(null);\r\n        dob.set(null);\r\n        address.set(null);\r\n        pocode.set(null);\r\n\r\n\r\n\r\n        return response.text(); \r\n      })\r\n      .then(data => {\r\n        // Handle the success response\r\n        alert('Signup request successful');\r\n        console.log(data);\r\n      })\r\n      .catch(error => {\r\n        // Handle the error\r\n        console.log(error.message);\r\n        const errorObject = JSON.parse(error.message);\r\n        if(errorObject.status == 500){\r\n          alert(\"database error: user already exists\");\r\n        }else{\r\n          alert(\"system error\");\r\n        }\r\n        \r\n        \r\n        return \"Error\";\r\n      });\r\n    \r\n    \r\n      \r\n      \r\n  \r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n","<script>\r\n    import { signUp } from '../loginService.js';\r\n    import { addingStatus } from '../stores.js';\r\n    import {\r\n    login,\r\n    pwd,\r\n    name,\r\n    surname,\r\n    phone,\r\n    email,\r\n    role,\r\n    gender,\r\n    dob,\r\n    address,\r\n    pocode\r\n    } from '../stores.js';\r\n    \r\n    \r\n    async function onSignUp() {\r\n        // Sign up functionality\r\n        await signUp();\r\n        \r\n    }\r\n\r\n    function goBack() {\r\n        addingStatus.set(0);\r\n    }\r\n</script>\r\n\r\n<main>\r\n    <div class=\"form-container\">\r\n        <h1>Add User/Professional</h1>\r\n        <form on:submit|preventDefault={onSignUp}>\r\n            <div class=\"form-columns\">\r\n                <div class=\"form-column\">\r\n                    <label>\r\n                        Username:\r\n                        <input type=\"text\" bind:value={$login} required />\r\n                    </label>\r\n                    <label>\r\n                        Password:\r\n                        <input type=\"password\" bind:value={$pwd} required />\r\n                    </label>\r\n                    <label>\r\n                        Name:\r\n                        <input type=\"text\" bind:value={$name} required />\r\n                    </label>\r\n                    <label>\r\n                        Surname:\r\n                        <input type=\"text\" bind:value={$surname} required />\r\n                    </label>\r\n                    <label>\r\n                        Role:\r\n                        <select bind:value={$role} required>\r\n                            <option value=\"\">Select Role</option>\r\n                            <option value=\"ROLE_PROFESSIONAL\">Professional</option>\r\n                            <option value=\"ROLE_USER\">User</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n                <div class=\"form-column\">\r\n                    <label>\r\n                        Gender:\r\n                        <select bind:value={$gender} required>\r\n                            <option value=\"\">Select Gender</option>\r\n                            <option value=\"male\">Male</option>\r\n                            <option value=\"female\">Female</option>\r\n                        </select>\r\n                    </label>\r\n                    <label>\r\n                        Date of Birth:\r\n                        <input type=\"date\" bind:value={$dob} required />\r\n                    </label>\r\n                    <label>\r\n                        Email:\r\n                        <input type=\"email\" bind:value={$email} required />\r\n                    </label>\r\n                    <label>\r\n                        Phone Number:\r\n                        <input type=\"tel\" bind:value={$phone} required />\r\n                    </label>\r\n                    <label>\r\n                        Address:\r\n                        <input type=\"text\" bind:value={$address} required />\r\n                    </label>\r\n                    <label>\r\n                        Postal Code:\r\n                        <input type=\"number\" bind:value={$pocode} required />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <button type=\"submit\">Add</button>\r\n        </form>\r\n        <button on:click={goBack}>Go Back</button>\r\n    </div>\r\n    \r\n</main>\r\n\r\n<style>\r\n    main {\r\n        padding: 0;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        min-height: 100vh;\r\n        min-width: 100vw;\r\n        margin: 0;\r\n    }\r\n\r\n    .form-container {\r\n        width: 40%;\r\n        max-width: 1080px; /* Adjust the max-width as needed for large screens */\r\n        background-color: #fff;\r\n        padding: 40px;\r\n        border-radius: 8px;\r\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n\r\n    \r\n\r\n    h1 {\r\n        color: #333;\r\n        font-size: 24px;\r\n        margin-bottom: 20px;\r\n        text-align: center;\r\n    }\r\n\r\n    form {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 10px;\r\n    }\r\n\r\n    .form-columns {\r\n        display: flex;\r\n        gap: 20px;\r\n    }\r\n\r\n    .form-column {\r\n        flex: 1;\r\n    }\r\n\r\n    label {\r\n        display: flex;\r\n        flex-direction: column;\r\n        font-weight: bold;\r\n    }\r\n\r\n    input {\r\n        padding: 10px;\r\n        border: none;\r\n        border-bottom: 1px solid #ccc;\r\n        outline: none;\r\n        transition: border-color 0.3s ease;\r\n    }\r\n\r\n    input:focus {\r\n        border-color: #007bff;\r\n    }\r\n\r\n    button {\r\n        padding: 12px;\r\n        background-color: #007bff;\r\n        color: #fff;\r\n        border: none;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n        transition: background-color 0.3s ease;\r\n    }\r\n\r\n    button:hover {\r\n        background-color: #0056b3;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        .form-container {\r\n            max-width: 400px;\r\n            padding: 30px;\r\n        }\r\n\r\n        .form-columns {\r\n            flex-direction: column;\r\n        }\r\n\r\n        .form-column {\r\n            flex: none;\r\n        }\r\n    }\r\n\r\n    /* New styles for the \"Go Back\" button */\r\n    button {\r\n        margin-top: 10px;\r\n        background-color: #007bff;\r\n        color: #fff;\r\n        transition: background-color 0.3s ease;\r\n    }\r\n\r\n    button:hover {\r\n        background-color: #0056b3;\r\n    }\r\n</style>\r\n","import { currentUser } from \"./stores\";\r\nimport { files } from \"./stores\";\r\nimport { programs } from \"./stores\";\r\nimport { allUsers } from \"./stores\";\r\nimport { altProfile } from \"./stores\";\r\nimport { allProfs } from \"./stores\";\r\nimport { allProgs } from \"./stores\";\r\nimport { profProgs } from \"./stores\";\r\nimport { allSuperProfs } from \"./stores\";\r\nimport { allAdmins } from \"./stores\";\r\n//import { profProfile } from \"./stores\";\r\n\r\n\r\n\r\nexport async function fetchFolders(user_id) {\r\n  return new Promise(async (resolve) => {\r\n    \r\n    let folders = [];\r\n    \r\n    try {\r\n      const formData = new URLSearchParams();\r\n      \r\n      \r\n      \r\n      formData.append('fetchfoldersbyuserid', user_id);\r\n      //formData.append('pwd', password);\r\n  \r\n      //console.log('cp1');\r\n      const response = await fetch('https://inhealion.gr/api_2.php', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n  \r\n      if (response.ok) {\r\n        await response.json().then(res => {\r\n          folders = res;\r\n          files.set(folders);\r\n          resolve(folders);\r\n          //console.log(folders);\r\n  \r\n        });\r\n        //let arr = text;\r\n        //let body = text.body();\r\n        //console.log(arr);\r\n        \r\n      } else {\r\n        const error = await response.text();\r\n        alert(error);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Database Error:', error);\r\n      alert('An error occurred fetching folders.');\r\n    }\r\n    //console.log(folders);\r\n    \r\n   \r\n   });\r\n}\r\n\r\nexport async function fetchPrograms(id) {\r\n  return new Promise(async (resolve) => {\r\n    \r\n    let programsArray = ['files', 'morefiles'];\r\n    \r\n    try {\r\n      const formData = new URLSearchParams();\r\n      \r\n      formData.append('fetchprogramsbyfolderid', id);\r\n      //formData.append('pwd', password);\r\n  \r\n      //console.log('cp1');\r\n      const response = await fetch('https://inhealion.gr/api_2.php', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      \r\n  \r\n      if (response.ok) {\r\n        await response.json().then(res => {\r\n          programsArray = res\r\n          \r\n  \r\n        });\r\n        \r\n        //let arr = text;\r\n        //let body = text.body();\r\n        //console.log(arr);\r\n        \r\n      } else {\r\n        const error = await response.text();\r\n        alert(error);\r\n      }\r\n      \r\n      programs.set(programsArray);\r\n      \r\n      \r\n    } catch (error) {\r\n      console.error('Database Error:', error);\r\n      alert('An error occurred fetching programs');\r\n    }\r\n    //console.log(folders);\r\n    resolve(true);  \r\n  \r\n  });\r\n}\r\n\r\n\r\nexport function fetchUsers() {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      let usersArray = [];\r\n\r\n      const formData = new URLSearchParams();\r\n      formData.append('fetchallusers', null);\r\n\r\n      const response = await fetch('https://inhealion.gr/api_2.php', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      if (response.ok) {\r\n        const res = await response.json();\r\n        usersArray = res;\r\n        //console.log(usersArray);\r\n      } else {\r\n        const error = await response.text();\r\n        throw new Error(error);\r\n      }\r\n\r\n      allUsers.set(usersArray);\r\n      \r\n\r\n      resolve(true);\r\n    } catch (error) {\r\n      console.error('Database Error:', error);\r\n      alert('An error occurred fetching Users');\r\n      reject(error);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\nexport async function fetchProfs() {\r\n  return new Promise(async (resolve) => {\r\n    \r\n    let profsArray = [];\r\n    \r\n    try {\r\n      const formData = new URLSearchParams();\r\n      \r\n      formData.append('fetchallprofs', null);\r\n      //formData.append('pwd', password);\r\n  \r\n      //console.log('cp1');\r\n      const response = await fetch('https://inhealion.gr/api_2.php', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      \r\n  \r\n      if (response.ok) {\r\n        await response.json().then(res => {\r\n          //profsArray = res.map(obj => ({ id: obj.id, name: obj.name, surname: obj.surname }));\r\n          profsArray = res;\r\n  \r\n        });\r\n        \r\n        //let arr = text;\r\n        //let body = text.body();\r\n        //console.log(arr);\r\n        \r\n      } else {\r\n        const error = await response.text();\r\n        alert(error);\r\n      }\r\n      \r\n      allProfs.set(profsArray);\r\n      //console.log(allUsers);\r\n      \r\n      \r\n    } catch (error) {\r\n      console.error('Database Error:', error);\r\n      alert('An error occurred fetching professionals');\r\n    }\r\n    //console.log(folders);\r\n    resolve(true);  \r\n  \r\n  });\r\n}\r\n\r\n\r\nexport async function fetchSuperProfs() {\r\n  return new Promise(async (resolve) => {\r\n    \r\n    let superProfsArray = [];\r\n    \r\n    try {\r\n      const formData = new URLSearchParams();\r\n      \r\n      formData.append('fetchallsuperprofs', null);\r\n      //formData.append('pwd', password);\r\n  \r\n      //console.log('cp1');\r\n      const response = await fetch('https://inhealion.gr/api_2.php', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      \r\n  \r\n      if (response.ok) {\r\n        await response.json().then(res => {\r\n          //profsArray = res.map(obj => ({ id: obj.id, name: obj.name, surname: obj.surname }));\r\n          superProfsArray = res;\r\n  \r\n        });\r\n        \r\n        //let arr = text;\r\n        //let body = text.body();\r\n        //console.log(arr);\r\n        \r\n      } else {\r\n        const error = await response.text();\r\n        alert(error);\r\n      }\r\n      \r\n      allSuperProfs.set(superProfsArray);\r\n      //console.log(allUsers);\r\n      \r\n      \r\n    } catch (error) {\r\n      console.error('Database Error:', error);\r\n      alert('An error occurred fetching professionals');\r\n    }\r\n    //console.log(folders);\r\n    resolve(true);  \r\n  \r\n  });\r\n}\r\n\r\nexport async function fetchAdmins() {\r\n  return new Promise(async (resolve) => {\r\n    \r\n    let adminsArray = [];\r\n    \r\n    try {\r\n      const formData = new URLSearchParams();\r\n      \r\n      formData.append('fetchalladmins', null);\r\n      //formData.append('pwd', password);\r\n  \r\n      //console.log('cp1');\r\n      const response = await fetch('https://inhealion.gr/api_2.php', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      \r\n  \r\n      if (response.ok) {\r\n        await response.json().then(res => {\r\n          //profsArray = res.map(obj => ({ id: obj.id, name: obj.name, surname: obj.surname }));\r\n          adminsArray = res;\r\n  \r\n        });\r\n        \r\n        //let arr = text;\r\n        //let body = text.body();\r\n        //console.log(arr);\r\n        \r\n      } else {\r\n        const error = await response.text();\r\n        alert(error);\r\n      }\r\n      \r\n      allAdmins.set(adminsArray);\r\n      //console.log(allUsers);\r\n      \r\n      \r\n    } catch (error) {\r\n      console.error('Database Error:', error);\r\n      alert('An error occurred fetching professionals');\r\n    }\r\n    //console.log(folders);\r\n    resolve(true);  \r\n  \r\n  });\r\n}\r\n\r\n\r\nexport function getAltProfile(id) {\r\n  return new Promise(async (resolve, reject) => {\r\n    const formData = new URLSearchParams();\r\n    formData.append('fetchprofilebyid', id);\r\n\r\n    try {\r\n      const response = await fetch('https://inhealion.gr/api_2.php', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        altProfile.set(data);\r\n\r\n        //console.log(data);\r\n\r\n        resolve(data);\r\n      } else {\r\n        const error = await response.text();\r\n        reject(new Error(error));\r\n      }\r\n    } catch (error) {\r\n      console.error('Login Error:', error);\r\n      reject(new Error('Error Fetching Profile'));\r\n    }\r\n  });\r\n}\r\n\r\n\r\nexport function getProfProfile(id) {\r\n  return new Promise(async (resolve, reject) => {\r\n    const formData = new URLSearchParams();\r\n    formData.append('fetchprofilebyid', id);\r\n\r\n    try {\r\n      const response = await fetch('https://inhealion.gr/api_2.php', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        profProfile.set(data);\r\n        //console.log(data);\r\n\r\n        resolve(data);\r\n      } else {\r\n        const error = await response.text();\r\n        reject(new Error(error));\r\n      }\r\n    } catch (error) {\r\n      console.error('Login Error:', error);\r\n      reject(new Error('Error Fetching Profile'));\r\n    }\r\n  });\r\n}\r\n\r\n\r\nexport async function fetchProgs() {\r\n  return new Promise(async (resolve) => {\r\n    \r\n    let progsArray = [];\r\n    \r\n    try {\r\n      const formData = new URLSearchParams();\r\n      \r\n      formData.append('fetchallprogs', null);\r\n      //formData.append('pwd', password);\r\n  \r\n      //console.log('cp1');\r\n      const response = await fetch('https://inhealion.gr/api_2.php', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      \r\n  \r\n      if (response.ok) {\r\n        await response.json().then(res => {\r\n          progsArray = res.map(obj => ({ id: obj.id, name: obj.name, active: obj.active, created: obj.created_at, updated: obj.updated_at, folder_name: obj.folder_name, user_name: obj.user_name, user_surname: obj.user_surname}));\r\n          \r\n        });\r\n\r\n        \r\n\r\n        \r\n        //let arr = text;\r\n        //let body = text.body();\r\n        //console.log(arr);\r\n        \r\n      } else {\r\n        const error = await response.text();\r\n        alert(error);\r\n      }\r\n      \r\n      allProgs.set(progsArray);\r\n      //console.log(allUsers);\r\n      \r\n      \r\n    } catch (error) {\r\n      console.error('Database Error:', error);\r\n      alert('An error occurred fetching programs');\r\n    }\r\n    //console.log(folders);\r\n    resolve(true);  \r\n  \r\n  });\r\n}\r\n\r\nexport async function renewFolderExpirationDate(renewDate, folderId) {\r\n  // Create a new FormData object\r\n  const formData = new FormData();\r\n  formData.append('renewdate', renewDate);\r\n  formData.append('folderid', folderId);\r\n\r\n  // Send a POST request to the API endpoint\r\n  try {\r\n    const response = await fetch('https://inhealion.gr/api_2.php', {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.text();\r\n      console.log(data); // Log the response\r\n      // Do additional operations or update the UI as needed\r\n      alert('Folder expiration date renewed successfully.');\r\n    } else {\r\n      throw new Error(response.statusText);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    // Handle the error case\r\n    alert('Error updating folder expiration date. Please try again later.');\r\n  }\r\n}\r\n\r\nexport function updateProfessional(user_id, professional_id) {\r\n  return new Promise((resolve, reject) => {\r\n    const url = 'https://inhealion.gr/api_2.php';\r\n    const formData = new FormData();\r\n    formData.append('user_id', user_id);\r\n    formData.append('addprofessional_id', professional_id);\r\n\r\n    fetch(url, {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          // Resolve the promise if response code is 200\r\n          return response.text();\r\n        } else if (response.status === 404) {\r\n          // Reject with specific error message if response code is 404\r\n          throw new Error('User not found');\r\n        } else if (response.status === 500) {\r\n          // Reject with specific error message if response code is 500\r\n          throw new Error('Internal server error');\r\n        } else {\r\n          // Reject with generic error message for other response codes\r\n          throw new Error('Unknown error occurred');\r\n        }\r\n      })\r\n      .then(resolve)\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n        // Reject with the error object for any network errors or exceptions\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//next\r\n\r\n\r\n\r\nexport async function fetchProfProgs() {\r\n  return new Promise(async (resolve) => {\r\n    \r\n    let progsArray = [];\r\n    \r\n    try {\r\n      const formData = new URLSearchParams();\r\n      \r\n      formData.append('fetchallprofprogs', null);\r\n      //formData.append('pwd', password);\r\n  \r\n      //console.log('cp1');\r\n      const response = await fetch('https://inhealion.gr/api_2.php', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      \r\n  \r\n      if (response.ok) {\r\n        await response.json().then(res => {\r\n          progsArray = res;\r\n          \r\n        });\r\n\r\n        \r\n      } else {\r\n        const error = await response.text();\r\n        alert(error);\r\n      }\r\n      \r\n      profProgs.set(progsArray);\r\n      //console.log(allUsers);\r\n      \r\n      \r\n    } catch (error) {\r\n      console.error('Database Error:', error);\r\n      alert('An error occurred fetching programs');\r\n    }\r\n    //console.log(folders);\r\n    resolve(true);  \r\n  \r\n  });\r\n}\r\n\r\nexport function fetchUsersByProf(id) {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      let usersArray = [];\r\n\r\n      const formData = new URLSearchParams();\r\n      formData.append('fetchprofusers', id);\r\n\r\n      const response = await fetch('https://inhealion.gr/api_2.php', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      if (response.ok) {\r\n        const res = await response.json();\r\n        usersArray = res;\r\n        \r\n      } else {\r\n        const error = await response.text();\r\n        throw new Error(error);\r\n      }\r\n\r\n      allUsers.set(usersArray);\r\n\r\n      resolve(true);\r\n    } catch (error) {\r\n      console.error('Database Error:', error);\r\n      alert('An error occurred fetching Users');\r\n      reject(error);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\nexport async function fetchProfProgsById(id) {\r\n  return new Promise(async (resolve) => {\r\n    \r\n    let progsArray = [];\r\n    \r\n    try {\r\n      const formData = new URLSearchParams();\r\n      \r\n      formData.append('fetchprofprogs', id);\r\n      //formData.append('pwd', password);\r\n  \r\n      //console.log('cp1');\r\n      const response = await fetch('https://inhealion.gr/api_2.php', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      \r\n  \r\n      if (response.ok) {\r\n        await response.json().then(res => {\r\n          progsArray = res;\r\n          \r\n        });\r\n\r\n        \r\n      } else {\r\n        const error = await response.text();\r\n        alert(error);\r\n      }\r\n      \r\n      profProgs.set(progsArray);\r\n      //console.log(allUsers);\r\n      \r\n      \r\n    } catch (error) {\r\n      console.error('Database Error:', error);\r\n      alert('An error occurred fetching programs');\r\n    }\r\n    //console.log(folders);\r\n    resolve(true);  \r\n  \r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<script>\r\n  // Import statements\r\n\r\nimport {\r\n  currentUser,\r\n  currentProfile,\r\n  allUsers,\r\n  allProfs,\r\n  allSuperProfs,\r\n  allAdmins,\r\n  allProgs,\r\n  altProfile,\r\n  //profProfile,\r\n  addingStatus,\r\n  filteredUserArray,\r\n  filteredProfArray,\r\n  filteredAdminArray,\r\n  filteredSuperProfArray,\r\n  filteredProgArray\r\n} from '../stores.js';\r\n\r\nimport AddUser from '../routes/AddUser.svelte';\r\nimport { fetchUsers, fetchProfs, fetchProgs, getAltProfile, getProfProfile, fetchProfProgs, fetchSuperProfs, fetchAdmins } from '../fileDbHandling.js';\r\nimport { signUp } from '../loginService.js';\r\nimport {\r\nlogin,\r\npwd,\r\nname,\r\nsurname,\r\nphone,\r\nemail,\r\nrole,\r\ngender,\r\ndob,\r\naddress,\r\npocode\r\n} from '../stores.js';\r\n\r\n\r\n\r\n// Variables and stores\r\n\r\nlet toggle = false;\r\nlet profToggle = false;\r\nlet userArray = [];\r\nlet ProfArray = [];\r\nlet ProgArray = [];\r\nlet superProfArray = [];\r\nlet AdminArray =[];\r\nlet activeTab = 'users';\r\nlet activeWindow = 'users';\r\nlet searchTerm = \"\";\r\nlet profile = {\r\n  name: \" \",\r\n}; \r\n\r\n\r\nlet currentPage = 0;\r\nconst entriesPerPage = 50;\r\nlet startIdx,endIdx;\r\n$: startIdx = currentPage * entriesPerPage;\r\n$: endIdx = startIdx + entriesPerPage;\r\n\r\nfresh();\r\n// Functions\r\n\r\nasync function getProfs() {\r\n  \r\n  const unsubscribeProfs = allProfs.subscribe(profs => {\r\n      ProfArray = [...profs];\r\n      filteredProfArray.set(ProfArray);\r\n    });\r\n    allProfs.set([]);\r\n  await getAllProfs();\r\n  unsubscribeProfs();\r\n  //console.log(ProfArray);\r\n\r\n}\r\n\r\nasync function getProgs() {\r\n  \r\n  const unsubscribeProgs = allProgs.subscribe(progs => {\r\n      ProgArray = [...progs];\r\n      filteredProgArray.set(ProgArray);\r\n    });\r\n    allProgs.set([]);\r\n  await getAllProgs();\r\n  unsubscribeProgs();\r\n  //console.log(ProfArray);\r\n\r\n}\r\n\r\n\r\n\r\nasync function getSuperProfs() {\r\n  \r\n  const unsubscribeSuperProfs = allSuperProfs.subscribe(profs => {\r\n      superProfArray = [...profs];\r\n      filteredSuperProfArray.set(superProfArray);\r\n    });\r\n    filteredSuperProfArray.set([]);\r\n  await getAllSuperProfs();\r\n  unsubscribeSuperProfs();\r\n  //console.log(ProfArray);\r\n\r\n}\r\n\r\nasync function getAdmins() {\r\n  \r\n  const unsubscribeAdmins = allAdmins.subscribe(profs => {\r\n      AdminArray = [...profs];\r\n      filteredAdminArray.set(AdminArray);\r\n    });\r\n    allAdmins.set([]);\r\n  await getAllAdmins();\r\n  unsubscribeAdmins();\r\n  //console.log(ProfArray);\r\n\r\n}\r\n\r\nasync function getProfProgs() {\r\n  await fetchProfProgs();\r\n  \r\n  \r\n}\r\n\r\nasync function getUsers() {\r\n  const unsubscribeUsers = allUsers.subscribe(users => {\r\n      userArray = [...users];\r\n      filteredUserArray.set(userArray);\r\n    });\r\n    allUsers.set([]);\r\n  await getAllUsers();\r\n  \r\n \r\n  unsubscribeUsers();\r\n}\r\n\r\nfunction getProf(id) {\r\n  profProfile.set(findProfById(id));\r\n  toggleProf();\r\n}\r\n\r\nfunction findProfById(id) {\r\n  return ProfArray.find(prof => prof.id === id) || null;\r\n}\r\n\r\nfunction findUserById(id) {\r\n  return userArray.find(user => user.id === id) || null;\r\n}\r\nfunction findProfessionalById(id) {\r\n  return ProfArray.find(user => user.id === id) || null;\r\n}\r\n\r\n\r\nasync function getAllUsers() {\r\n  await fetchUsers();\r\n  //console.log(\"Fetched all users\");\r\n}\r\n\r\nasync function getAllProfs() {\r\n  await fetchProfs();\r\n  //console.log(\"Fetched all professionals\");\r\n}\r\nasync function getAllProgs() {\r\n  await fetchProgs();\r\n  //console.log(\"Fetched all professionals\");\r\n}\r\n\r\n\r\nasync function getAllSuperProfs() {\r\n  await fetchSuperProfs();\r\n  //console.log(\"Fetched all professionals\");\r\n}\r\n\r\nasync function getAllAdmins() {\r\n  await fetchAdmins();\r\n  //console.log(\"Fetched all professionals\");\r\n}\r\n\r\n\r\nfunction openUser(id) {\r\n  console.log(id);\r\n  addingStatus.set(2);\r\n  altProfile.set(findUserById(id));\r\n}\r\n\r\nfunction openProfessional(id) {\r\n  console.log(\"opening prof\");\r\n  addingStatus.set(3);\r\n  altProfile.set(findProfessionalById(id));\r\n}\r\n\r\nfunction switchTab(tab) {\r\n  activeTab = tab;\r\n}\r\nfunction switchWindow(window) {\r\n  activeWindow = window;\r\n  handleSearch({target: {value: ''}});\r\n  //console.log(window);\r\n}\r\n\r\nasync function refresh(){\r\n    \r\n    \r\n    const popup = document.getElementById('loadingPopup');\r\n      //console.log(\"opening popup 1\");\r\n      popup.style.display = 'block';\r\n      if(activeWindow == 'users'){\r\n        if(activeTab == 'users'){            \r\n            await getUsers();\r\n        }else if(activeTab == 'professionals'){\r\n          await getProfs();\r\n        }else if(activeTab == 'superProfessionals'){\r\n          await getSuperProfs();\r\n        }else if(activeTab == 'admins'){\r\n          await getAdmins();\r\n        }\r\n\r\n        \r\n      }else if(activeWindow == 'programs'){\r\n        await getProgs();\r\n        \r\n      }\r\n      \r\n      popup.style.display = 'none';\r\n      \r\n\r\n    \r\n\r\n}\r\nfunction delay(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nasync function fresh(){\r\n    \r\n    \r\n    await getUsers();\r\n    await getProfs();\r\n    await getProgs();\r\n    await getSuperProfs();\r\n    await getAdmins();\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nfunction handleSearch(event) {\r\n  \r\n  searchTerm = event.target.value.toLowerCase();\r\n  //console.log(searchTerm);\r\n  filteredUserArray.set(\r\n    userArray.filter(user => {\r\n      return (\r\n        user.name.toLowerCase().includes(searchTerm) ||\r\n        user.surname.toLowerCase().includes(searchTerm) ||\r\n        user.email.toLowerCase().includes(searchTerm) ||\r\n        user.phone_number.toLowerCase().includes(searchTerm) ||\r\n        user.date_of_birth.toLowerCase().includes(searchTerm)\r\n      );\r\n    })\r\n  );\r\n\r\n  filteredProfArray.set(\r\n    ProfArray.filter(professional => {\r\n      return (\r\n        professional.name.toLowerCase().includes(searchTerm) ||\r\n        professional.surname.toLowerCase().includes(searchTerm) ||\r\n        professional.email.toLowerCase().includes(searchTerm) ||\r\n        professional.phone_number.toLowerCase().includes(searchTerm) ||\r\n        professional.date_of_birth.toLowerCase().includes(searchTerm)\r\n      );\r\n    })\r\n  );\r\n\r\n  filteredSuperProfArray.set(\r\n    superProfArray.filter(professional => {\r\n      return (\r\n        professional.name.toLowerCase().includes(searchTerm) ||\r\n        professional.surname.toLowerCase().includes(searchTerm) ||\r\n        professional.email.toLowerCase().includes(searchTerm) ||\r\n        professional.phone_number.toLowerCase().includes(searchTerm) ||\r\n        professional.date_of_birth.toLowerCase().includes(searchTerm)\r\n      );\r\n    })\r\n  );\r\n\r\n  filteredAdminArray.set(\r\n    AdminArray.filter(admin => {\r\n      return (\r\n        admin.name.toLowerCase().includes(searchTerm) ||\r\n        admin.surname.toLowerCase().includes(searchTerm) ||\r\n        admin.email.toLowerCase().includes(searchTerm)\r\n      );\r\n    })\r\n  );\r\n\r\n  filteredProgArray.set(\r\n    ProgArray.filter(program => {\r\n      return (\r\n        program.name.toLowerCase().includes(searchTerm) ||\r\n        program.user_surname.toLowerCase().includes(searchTerm) ||\r\n        program.user_name.toLowerCase().includes(searchTerm) ||\r\n        program.folder_name.toLowerCase().includes(searchTerm)\r\n      );\r\n    })\r\n  );\r\n\r\n\r\n}\r\n\r\n// Main component\r\n\r\n\r\n$: {\r\n  // Update filteredUserArray when searchTerm or userArray changes\r\n  filteredUserArray.set(\r\n    userArray.filter(user => {\r\n      return (\r\n        user.name.toLowerCase().includes(searchTerm) ||\r\n        user.surname.toLowerCase().includes(searchTerm) //||\r\n        //user.email.toLowerCase().includes(searchTerm) ||\r\n        //user.phone_number.toLowerCase().includes(searchTerm) ||\r\n        //user.date_of_birth.toLowerCase().includes(searchTerm)\r\n      );\r\n    })\r\n  );\r\n}\r\n\r\n\r\n$: {\r\n  // Update filteredUserArray when searchTerm or userArray changes\r\n  filteredProfArray.set(\r\n    ProfArray.filter(professional => {\r\n      return (\r\n        professional.name.toLowerCase().includes(searchTerm) ||\r\n        professional.surname.toLowerCase().includes(searchTerm) //||\r\n        //user.email.toLowerCase().includes(searchTerm) ||\r\n        //user.phone_number.toLowerCase().includes(searchTerm) ||\r\n        //user.date_of_birth.toLowerCase().includes(searchTerm)\r\n      );\r\n    })\r\n  );\r\n}\r\nfunction nextPage() {\r\n    currentPage += 1;\r\n  }\r\n\r\n  // Create a function to handle navigation to the previous section\r\n  function previousPage() {\r\n    currentPage -= 1;\r\n  }\r\n\r\n\r\nasync function onSignUp() {\r\n        // Sign up functionality\r\n        await signUp();\r\n        \r\n    }\r\n\r\n    function closeForm(){\r\n      const popup = document.getElementById('addUserPopup');\r\n      //console.log(\"opening popup 1\");\r\n      popup.style.display = 'none';\r\n    }\r\n    function openForm(){\r\n      const popup = document.getElementById('addUserPopup');\r\n      //console.log(\"opening popup 1\");\r\n      popup.style.display = 'block';\r\n    }\r\n\r\n\r\n</script>\r\n\r\n<main>\r\n  <div class = \"super-container\">\r\n    <div class = \"side-bar\">\r\n      <div class=\"user-details\">\r\n          \r\n         \r\n      </div>\r\n      <div class=\"side-bar-buttons\">\r\n        <button class=\"{activeWindow === 'profile' ? 'active' : ''}\" on:click={() => switchWindow('profile')}>\r\n          <i class=\"fa-solid fa-id-badge\"></i>\r\n            <p>Details</p>\r\n        </button>\r\n        <button class=\"{activeWindow === 'users' ? 'active' : ''}\" on:click={() => switchWindow('users')}>\r\n          <i class=\"fa-solid fa-users\"></i>\r\n          <p>Users</p>\r\n        </button>\r\n        <button class=\"{activeWindow === 'programs' ? 'active' : ''}\" on:click={() => switchWindow('programs')}>\r\n          <i class=\"fa-solid fa-file-waveform\"></i>\r\n          <p>Programs</p>\r\n        </button>\r\n      </div>\r\n      \r\n           \r\n    </div>\r\n\r\n      <div class=\"lower-container\">\r\n        \r\n          \r\n        {#if activeWindow === 'profile'}\r\n            \r\n      <div class = \"profile-window\">\r\n        <div class=\"user-details\">\r\n          <div class=\"user-info\">\r\n            <h3 class=\"profilename\">{$currentProfile.name} {$currentProfile.surname}</h3>\r\n            <p class=\"profile-role\">{$currentUser.user_role}</p>\r\n            <div class=\"card-content\">\r\n              <div class=\"info-row\">\r\n                  <div class=\"info-label\">Email Address:</div>\r\n                  <div class=\"info-value\">{$currentProfile.email}</div>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                  <div class=\"info-label\">Date of Birth:</div>\r\n                  <div class=\"info-value\">{$currentProfile.date_of_birth}</div>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                  <div class=\"info-label\">Phone Number:</div>\r\n                  <div class=\"info-value\">{$currentProfile.phone_number}</div>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                  <div class=\"info-label\">Gender:</div>\r\n                  <div class=\"info-value\">{$currentProfile.gender}</div>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                <div class=\"info-label\">Created:</div>\r\n                <div class=\"info-value\">{$currentProfile.created_at}</div>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                <div class=\"info-label\">Last updated:</div>\r\n                <div class=\"info-value\">{$currentProfile.updated_at}</div>\r\n            </div>\r\n\r\n            <div class=\"info-row\">\r\n              <div class=\"info-label\">Address:</div>\r\n              <div class=\"info-value\">{$currentProfile.address}</div>\r\n          </div>\r\n          </div>\r\n          </div>\r\n          <div class = \"avatar-div\">\r\n            {#if $currentUser.user_role === \"Administrator\"}\r\n              <i class=\"fa-solid fa-user-shield fa-2xl\"></i>\r\n            {:else if $currentUser.user_role === \"Professional\" || $currentUser.user_role === \"S. Professional\"}\r\n              <i class=\"fa-solid fa-user-tie fa-2xl\"></i>\r\n            {:else}\r\n              <i class=\"fa-solid fa-user fa-2xl\"></i>\r\n            {/if}\r\n          </div>\r\n        </div>\r\n            \r\n            \r\n        </div>\r\n        \r\n    \r\n        {/if}\r\n          \r\n          {#if activeWindow === 'users'}\r\n          <div class=\"action-bar\">\r\n            <input type=\"text\" id=\"searchInput\" placeholder=\"Search...\" on:input={handleSearch} />\r\n            <button on:click={openForm} class=\"add-user-button\">\r\n              <i class=\"fas fa-user-plus\"></i>\r\n            </button>\r\n            <button on:click={refresh} class=\"add-user-button\">\r\n              <i class=\"fas fa-rotate\"></i>\r\n            </button>\r\n          </div>\r\n          <div class=\"tab-selector\">\r\n              <button class=\"{activeTab === 'users' ? 'active' : ''}\" on:click={() => switchTab('users')}>Users</button>\r\n              <button class=\"{activeTab === 'professionals' ? 'active' : ''}\" on:click={() => switchTab('professionals')}>Professionals</button>\r\n              <button class=\"{activeTab === 'superProfessionals' ? 'active' : ''}\" on:click={() => switchTab('superProfessionals')}>S. Professionals</button>\r\n              <button class=\"{activeTab === 'admins' ? 'active' : ''}\" on:click={() => switchTab('admins')}>Admins</button>\r\n          \r\n          </div>\r\n\r\n          {#if activeTab === 'users'}\r\n          <div class=\"user-list-container\">\r\n            <div class=\"file-list\">\r\n              \r\n              <table class=\"user-table\">\r\n                <!-- Table header -->\r\n                <thead class=\"sticky-header\">\r\n                  <tr>\r\n                    <th class=\"table-heading\">Name</th>\r\n                    <th class=\"table-heading\">Email</th>\r\n                    <th class=\"table-heading\">Phone Number</th>\r\n                    <th class=\"table-heading\">Professional</th>\r\n                    <th class=\"table-heading\">Date of Birth</th>\r\n                  </tr>\r\n                </thead>\r\n          \r\n                <!-- Table body -->\r\n                <tbody>\r\n                  {#each $filteredUserArray as user}\r\n                  <tr class=\"clickable-row\" on:click={() => openUser(user.id)}>\r\n                    <td class=\"table-entry\">{user.name} {user.surname}</td>\r\n                    <td class=\"table-entry\">{user.email}</td>\r\n                    <td class=\"table-entry\">{user.phone_number}</td>\r\n                    <td class=\"table-entry\">{user.professional}</td>\r\n                    <td class=\"table-entry\">{user.date_of_birth}</td>\r\n                  </tr>\r\n                  {/each}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          {/if}\r\n\r\n          {#if activeTab === 'professionals'}\r\n          <div class=\"user-list-container\">\r\n            <div class=\"file-list\">\r\n              <table class=\"user-table\">\r\n                <thead class=\"sticky-header\">\r\n                  <tr>\r\n                    <th class=\"table-heading\">Name</th>\r\n                    <th class=\"table-heading\">Email</th>\r\n                    <th class=\"table-heading\">Phone Number</th>\r\n                    <th class=\"table-heading\">Date of Birth</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {#each $filteredProfArray as professional}\r\n                  <tr class=\"clickable-row\" on:click={openProfessional(professional.id)}>\r\n                    <td class=\"table-entry\">{professional.name} {professional.surname}</td>\r\n                    <td class=\"table-entry\">{professional.email}</td>\r\n                    <td class=\"table-entry\">{professional.phone_number}</td>\r\n                    <td class=\"table-entry\">{professional.date_of_birth}</td>\r\n                  </tr>\r\n                  {/each}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          \r\n          {/if}\r\n          {#if activeTab === 'superProfessionals'}\r\n          <div class=\"user-list-container\">\r\n            <div class=\"file-list\">\r\n              <table class=\"user-table\">\r\n                <thead class=\"sticky-header\">\r\n                  <tr>\r\n                    <th class=\"table-heading\">Name</th>\r\n                    <th class=\"table-heading\">Email</th>\r\n                    <th class=\"table-heading\">Phone Number</th>\r\n                    <th class=\"table-heading\">Date of Birth</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {#each $filteredSuperProfArray as professional}\r\n                  <tr class=\"clickable-row\" on:click={openProfessional(professional.id)}>\r\n                    <td class=\"table-entry\">{professional.name} {professional.surname}</td>\r\n                    <td class=\"table-entry\">{professional.email}</td>\r\n                    <td class=\"table-entry\">{professional.phone_number}</td>\r\n                    <td class=\"table-entry\">{professional.date_of_birth}</td>\r\n                  </tr>\r\n                  {/each}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          \r\n          {/if}\r\n          {#if activeTab === 'admins'}\r\n          <div class=\"user-list-container\">\r\n            <div class=\"file-list\">\r\n              <table class=\"user-table\">\r\n                <thead class=\"sticky-header\">\r\n                  <tr>\r\n                    <th class=\"table-heading\">Name</th>\r\n                    <th class=\"table-heading\">Email</th>\r\n                    <th class=\"table-heading\">Phone Number</th>\r\n                    <th class=\"table-heading\">Date of Birth</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {#each $filteredAdminArray as admin}\r\n                  <tr>\r\n                    <td class=\"table-entry\">{admin.name} {admin.surname}</td>\r\n                    <td class=\"table-entry\">{admin.email}</td>\r\n                    <td class=\"table-entry\">{admin.phone_number}</td>\r\n                    <td class=\"table-entry\">{admin.date_of_birth}</td>\r\n                  </tr>\r\n                  {/each}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          \r\n          {/if}\r\n          {/if}\r\n\r\n          \r\n          {#if activeWindow === 'programs'}\r\n          <div class=\"action-bar\">\r\n            <input type=\"text\" id=\"searchInput\" placeholder=\"Search...\" on:input={handleSearch} />\r\n            <button on:click={refresh} class=\"add-user-button\">\r\n              <i class=\"fas fa-rotate\"></i>\r\n            </button>\r\n          </div>\r\n          \r\n          <div class=\"user-list-container\">\r\n            <div class=\"file-list\">\r\n              <table class=\"program-table\">\r\n                <thead class=\"sticky-header\">\r\n                  <tr>\r\n                    <th class=\"table-heading\">File</th>\r\n                    <th class=\"table-heading\">Folder</th>\r\n                    <th class=\"table-heading\">User</th>\r\n                    <th class=\"table-heading\">Created</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {#each $filteredProgArray.slice(startIdx, endIdx) as program}\r\n                  <!-- Display the limited entries based on the current page -->\r\n                  <tr>\r\n                    <td class=\"table-entry\">{program.name}</td>\r\n                    <td class=\"table-entry\">{program.folder_name}</td>\r\n                    <td class=\"table-entry\">{program.user_name} {program.user_surname}</td>\r\n                    <td class=\"table-entry\">{program.created}</td>\r\n                  </tr>\r\n                  {/each}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            \r\n          </div>\r\n          <div>\r\n            {#if currentPage > 0}\r\n              <button class=\"nav-button\" on:click={previousPage}>Previous</button>\r\n            {/if}\r\n          \r\n            {#if $filteredProgArray.length > endIdx}\r\n              <button class=\"nav-button\" on:click={nextPage}>Next</button>\r\n            {/if}\r\n          </div>\r\n          \r\n         \r\n          {/if}\r\n          \r\n      </div>\r\n\r\n      \r\n  </div>\r\n\r\n  <div id=\"addUserPopup\" class=\"popup\">    \r\n      <div class=\"form-container\">\r\n        <h1>Add User/Professional</h1>\r\n        <form on:submit|preventDefault={onSignUp}>\r\n            <div class=\"form-columns\">\r\n                <div class=\"form-column\">\r\n                    <label>\r\n                        Username:\r\n                        <input type=\"text\" bind:value={$login} required />\r\n                    </label>\r\n                    <label>\r\n                        Password:\r\n                        <input type=\"password\" bind:value={$pwd} required />\r\n                    </label>\r\n                    <label>\r\n                        Name:\r\n                        <input type=\"text\" bind:value={$name} required />\r\n                    </label>\r\n                    <label>\r\n                        Surname:\r\n                        <input type=\"text\" bind:value={$surname} required />\r\n                    </label>\r\n                    <label>\r\n                        Role:\r\n                        <select bind:value={$role} required>\r\n                            <option value=\"\">Select Role</option>\r\n                            <option value=\"ROLE_PROFESSIONAL\">Professional</option>\r\n                            <option value=\"ROLE_USER\">User</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n                <div class=\"form-column\">\r\n                    <label>\r\n                        Gender:\r\n                        <select bind:value={$gender} required>\r\n                            <option value=\"\">Select Gender</option>\r\n                            <option value=\"male\">Male</option>\r\n                            <option value=\"female\">Female</option>\r\n                        </select>\r\n                    </label>\r\n                    <label>\r\n                        Date of Birth:\r\n                        <input type=\"date\" bind:value={$dob} required />\r\n                    </label>\r\n                    <label>\r\n                        Email:\r\n                        <input type=\"email\" bind:value={$email} required />\r\n                    </label>\r\n                    <label>\r\n                        Phone Number:\r\n                        <input type=\"tel\" bind:value={$phone} required />\r\n                    </label>\r\n                    <label>\r\n                        Address:\r\n                        <input type=\"text\" bind:value={$address} required />\r\n                    </label>\r\n                    <label>\r\n                        Postal Code:\r\n                        <input type=\"number\" bind:value={$pocode} required />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <button type=\"submit\">Add</button>\r\n        </form>\r\n        <button on:click={closeForm}>Cancel</button>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"loadingPopup\" class=\"popup\">\r\n    <div class=\"loading-circle\">\r\n      <i class=\"fa-solid fa-spinner fa-spin\"></i>\r\n    </div>\r\n  </div>\r\n\r\n   \r\n</main>\r\n   \r\n        \r\n\r\n      \r\n \r\n  \r\n<style>\r\n  main {\r\n    padding: 0px;\r\n    margin: 0px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .super-container {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content:flex-start;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .side-bar {\r\n    width: 17%;\r\n    overflow: auto;\r\n    margin-left: 0;\r\n    margin-right: 1%;\r\n  }\r\n\r\n  .side-bar button {\r\n  padding: 10px 20px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: start;\r\n  align-items: center;\r\n  background-color: transparent;\r\n  text-align: left;\r\n  margin: 0;\r\n  color: #333;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n  width: 80%;\r\n}\r\n\r\n.side-bar p {\r\n  margin: 0;\r\n  margin-left: 25px;\r\n}\r\n\r\n.side-bar-buttons {\r\n  margin-top: 0px;\r\n}\r\n\r\n\r\n\r\n.side-bar button:hover {\r\n  background-color: #eeeeee;\r\n \r\n}\r\n\r\n.side-bar button.active {\r\n  background-color: #e6e6e6;\r\n}\r\n\r\n.profile-window {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: start;\r\n}\r\n\r\n\r\n  .user-details {\r\n    display: flex;\r\n    width: 90%;\r\n    padding: 10px;\r\n    flex-direction: row;\r\n    align-items: start;\r\n    margin-bottom: 10px;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n  }\r\n\r\n  .profilename {\r\n    font-size: 24px;\r\n    margin-bottom: 2px;\r\n    margin-top: 12px;\r\n  }\r\n\r\n  .avatar-div {\r\n    height: 100%;\r\n    padding-top: 30px;\r\n    font-size: 48px;\r\n    color: #00b6a0;\r\n\r\n  }\r\n\r\n  .nav-button {\r\n    margin: 20px;\r\n    width: 120px;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  \r\n  \r\n.card-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 20px;\r\n  margin-left: 20px;\r\n}\r\n\r\n.info-row {\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.info-label {\r\n  font-weight: bold;\r\n  margin-right: 8px;\r\n}\r\n\r\n.info-value {\r\n  flex-grow: 1;\r\n}\r\n\r\n\r\n\r\n  .lower-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 73%;\r\n    margin-top: 0px;\r\n    padding-bottom: 10px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    overflow-x: auto;\r\n  }\r\n\r\n  .action-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n  padding: 10px;\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n}\r\n.action-bar input[type=\"text\"] {\r\n  padding: 8px;\r\n  flex: 1;\r\n  margin-top: 12px;\r\n  margin-right: 30px;\r\n  border: none; /* Remove the border */\r\n  border-bottom: 1px solid #ccc; /* Add a bottom border */\r\n  border-radius: 0; /* Remove border-radius */\r\n  font-size: 14px;\r\n}\r\n\r\n.action-bar input[type=\"text\"]:focus {\r\n  outline: none;\r\n  border-color: #999;\r\n  box-shadow: none; /* Remove the box-shadow */\r\n}\r\n\r\n\r\n  .tab-selector {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n  padding: 10px;\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n}\r\n\r\n\r\n.tab-selector button {\r\n  padding: 10px 20px;\r\n  background-color: transparent;\r\n  text-decoration: underline;\r\n  margin: 0;\r\n  color: #333;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n  width: 25%;\r\n}\r\n\r\n\r\n\r\n.tab-selector button:hover {\r\n  background-color: #eeeeee;\r\n}\r\n\r\n.tab-selector button.active {\r\n  background-color: #e6e6e6;\r\n}\r\n\r\n.add-user-button {\r\n    padding: 0;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    margin: 0;\r\n    background-color: transparent;\r\n    color: #000000;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    font-size: 13px;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n\r\n  .add-user-button:hover{\r\n    color: #0056b3;\r\n   \r\n  }\r\n\r\n\r\n  .user-list-container{\r\n    position: relative;\r\n    flex-grow: 1;\r\n    overflow-y: scroll;\r\n    width: 100%;\r\n  }\r\n\r\n  \r\n\r\n  .user-table {\r\n    table-layout: auto;\r\n    margin-top: 0px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n    overflow-x: scroll;\r\n}\r\n\r\n.program-table {\r\n    table-layout: fixed;\r\n    margin-top: 0px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n    overflow-x: scroll;\r\n}\r\n\r\n.table-heading {\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  font-size: 15px;\r\n  background-color: #ddd;\r\n  \r\n}\r\n\r\n.table-entry {\r\n    text-align: center;\r\n    padding: 8px;\r\n    border-bottom: 1px solid rgb(203, 203, 203);\r\n    font-size: 14px;\r\n    \r\n  }\r\n\r\ntable td {\r\n  text-align: center;\r\n  padding: 12px;\r\n  white-space: nowrap;\r\n  \r\n}\r\n.clickable-row {\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n\r\n  .clickable-row:hover {\r\n    background-color: lightgray;\r\n  }\r\n\r\n.sticky-header {\r\n    position: sticky;\r\n    top: 0;\r\n    background-color: #f5f5f5;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    .lower-container {\r\n      flex-direction: column;\r\n      align-items: stretch;\r\n    }\r\n\r\n    .user-list-container {\r\n      width: 100%;\r\n      margin-top: 20px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n\r\n  .popup {\r\n  display: none;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 9999;\r\n}\r\n\r\n  \r\n  .form-container {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        width: 40%;\r\n        max-width: 1080px; /* Adjust the max-width as needed for large screens */\r\n        background-color: #fff;\r\n        padding: 40px;\r\n        border-radius: 8px;\r\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n\r\n    .loading-circle {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        color: white;\r\n        transform: translate(-50%, -50%);\r\n        width: 40%;\r\n        max-width: 1080px; /* Adjust the max-width as needed for large screens */\r\n        padding: 40px;\r\n        border-radius: 8px;\r\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        font-size: 48px;\r\n    }\r\n\r\n    \r\n\r\n    h1 {\r\n        color: #333;\r\n        font-size: 24px;\r\n        margin-bottom: 20px;\r\n        text-align: center;\r\n    }\r\n\r\n    form {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 10px;\r\n    }\r\n\r\n    .form-columns {\r\n        display: flex;\r\n        gap: 20px;\r\n    }\r\n\r\n    .form-column {\r\n        flex: 1;\r\n    }\r\n\r\n    label {\r\n        display: flex;\r\n        flex-direction: column;\r\n        font-weight: bold;\r\n    }\r\n\r\n    input {\r\n        padding: 10px;\r\n        border: none;\r\n        border-bottom: 1px solid #ccc;\r\n        outline: none;\r\n        transition: border-color 0.3s ease;\r\n    }\r\n\r\n    input:focus {\r\n        border-color: #007bff;\r\n    }\r\n\r\n    button {\r\n        padding: 12px;\r\n        background-color: #007bff;\r\n        color: #fff;\r\n        border: none;\r\n        border-radius: 0;\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n        transition: background-color 0.3s ease;\r\n    }\r\n\r\n    .nav-button:hover {\r\n        background-color: #0056b3;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        .form-container {\r\n            max-width: 400px;\r\n            padding: 30px;\r\n        }\r\n\r\n        .form-columns {\r\n            flex-direction: column;\r\n        }\r\n\r\n        .form-column {\r\n            flex: none;\r\n        }\r\n    }\r\n\r\n    /* New styles for the \"Go Back\" button */\r\n    \r\n\r\n    \r\n</style>\r\n","<script>\r\n  import { subscribe } from 'svelte/internal';\r\n  import { allUsers, currentUser, filteredProgArray, profProgs } from '../stores.js';\r\n  import { currentProfile } from '../stores.js';\r\n  import { filteredUserArray } from '../stores.js';\r\n  import { fetchProfProgsById } from '../fileDbHandling.js';\r\n  import { fetchUsersByProf } from '../fileDbHandling.js';\r\n  import { addingStatus } from '../stores.js';\r\n  import { altProfile } from '../stores.js';\r\n  let toggle = false;\r\n  function toggleDetails (){\r\n      toggle = !toggle;\r\n  }\r\n\r\n  let userArray = [{id: 1, name: 'user-1'},{id: 1, name: 'user-1'},{id: 1, name: 'user-1'},{id: 1, name: 'user-1'},];\r\n  let ProgArray = [{id: 1, name: 'user-1'},{id: 1, name: 'user-1'},{id: 1, name: 'user-1'},{id: 1, name: 'user-1'},];\r\n  let myId = 0;\r\n  let isUserOpen = false;\r\n  let isProgramOpen = false;\r\n  let activeTab = 'users';\r\n  let searchTerm = \"\";\r\n\r\n\r\n \r\n \r\n \r\n  const unsubProfile = currentProfile.subscribe(prof => {\r\n    myId = prof.user_id;\r\n  });\r\n  unsubProfile();\r\n  getData();\r\n  \r\n  \r\n  async function getData(){\r\n    await fetchUsersByProf(myId);\r\n    await fetchProfProgsById(myId);\r\n    const unsubscribeUsers = allUsers.subscribe(users => {\r\n      userArray = [...users];\r\n      filteredUserArray.set(userArray);\r\n      filteredUserArray.subscribe(files => {\r\n        \r\n      })\r\n    });\r\n    const unsubscribeFiles = profProgs.subscribe(files => {\r\n      ProgArray = [...files];\r\n      filteredProgArray.set(ProgArray);\r\n    });\r\n    unsubscribeFiles();\r\n    unsubscribeUsers();\r\n    \r\n  }\r\n  function toggleViewUser(){\r\n    isUserOpen = !isUserOpen;\r\n  }\r\n  function getProfile(id){\r\n    toggleViewUser();\r\n  }\r\n  function toggleViewProgram(){\r\n    isProgramOpen = !isProgramOpen;\r\n  }\r\n  function getProgram(id){\r\n    toggleViewProgram();\r\n  }\r\n\r\n  function handleSearch(event) {\r\n  \r\n  searchTerm = event.target.value.toLowerCase();\r\n  //console.log(searchTerm);\r\n  filteredUserArray.set(\r\n    userArray.filter(user => {\r\n      return (\r\n        user.name.toLowerCase().includes(searchTerm) ||\r\n        user.surname.toLowerCase().includes(searchTerm) ||\r\n        user.email.toLowerCase().includes(searchTerm) ||\r\n        user.phone_number.toLowerCase().includes(searchTerm) ||\r\n        user.date_of_birth.toLowerCase().includes(searchTerm)\r\n      );\r\n    })\r\n  );\r\n\r\n  filteredProgArray.set(\r\n    ProgArray.filter(program => {\r\n      return (\r\n        program.name.toLowerCase().includes(searchTerm)\r\n                \r\n      );\r\n    })\r\n  );\r\n}\r\nfunction switchTab(tab) {\r\n  activeTab = tab;\r\n}\r\n\r\nfunction openUser(id) {\r\n  console.log(id);\r\n  addingStatus.set(4);\r\n  altProfile.set(findUserById(id));\r\n}\r\n\r\nfunction findUserById(id) {\r\n  return userArray.find(user => user.id === id) || null;\r\n}\r\n\r\n\r\n \r\n\r\n</script>\r\n\r\n<main>\r\n  \r\n    <div class=\"user-details\">\r\n      <div class=\"user-info\">\r\n        <h3 class=\"username\">{$currentProfile.name} {$currentProfile.surname}</h3>\r\n        <p class=\"user-role\">Professional</p>\r\n        <button class=\"detail-button\" on:click={toggleDetails}>Details</button>\r\n      </div>\r\n      <div>\r\n        <img src=\"avatar.png\" alt=\"User Avatar\" class=\"avatar\" />\r\n      </div>\r\n    </div>\r\n\r\n    {#if toggle}\r\n      <div class=\"card\">\r\n        <div class=\"card-content\">\r\n          <div class=\"info-row\">\r\n            <div class=\"info-label\">Email Address:</div>\r\n            <div class=\"info-value\">{$currentProfile.email}</div>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <div class=\"info-label\">Date of Birth:</div>\r\n            <div class=\"info-value\">{$currentProfile.date_of_birth}</div>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <div class=\"info-label\">Phone Number:</div>\r\n            <div class=\"info-value\">{$currentProfile.phone_number}</div>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <div class=\"info-label\">Address:</div>\r\n            <div class=\"info-value\">{$currentProfile.address}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    {/if}\r\n\r\n    <div class=\"lower-container\">\r\n    \r\n      \r\n      <div class=\"tab-selector\">\r\n        <input type=\"text\" id=\"searchInput\" placeholder=\"Search...\" on:input={handleSearch} />\r\n          <button class=\"{activeTab === 'users' ? 'active' : ''}\" on:click={() => switchTab('users')}>Users</button>\r\n          <button class=\"{activeTab === 'programs' ? 'active' : ''}\" on:click={() => switchTab('programs')}>Programs</button>\r\n      </div>\r\n\r\n      {#if activeTab === 'users'}\r\n      <div class=\"user-list-container\">\r\n        <div class=\"file-list\">\r\n          \r\n          <table class=\"user-table\">\r\n            <!-- Table header -->\r\n            <thead class=\"sticky-header\">\r\n              <tr>\r\n                <th class=\"table-heading\">Name</th>\r\n                <th class=\"table-heading\">Email</th>\r\n                <th class=\"table-heading\">Phone Number</th>\r\n                <th class=\"table-heading\">Date of Birth</th>\r\n              </tr>\r\n            </thead>\r\n      \r\n            <!-- Table body -->\r\n            <tbody>\r\n              {#each $filteredUserArray as user}\r\n              <tr class=\"clickable-row\" on:click={() => openUser(user.id)}>\r\n                <td class=\"table-entry\">{user.name} {user.surname}</td>\r\n                <td class=\"table-entry\">{user.email}</td>\r\n                <td class=\"table-entry\">{user.phone_number}</td>\r\n                <td class=\"table-entry\">{user.date_of_birth}</td>\r\n              </tr>\r\n              {/each}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      {/if}\r\n\r\n      {#if activeTab === 'programs'}\r\n      <div class=\"user-list-container\">\r\n        <div class=\"file-list\">\r\n          <table class=\"user-table\">\r\n            <thead class=\"sticky-header\">\r\n              <tr>\r\n                <th class=\"table-heading\">Name</th>\r\n                <th class=\"table-heading\">Created</th>\r\n                <th class=\"table-heading\">Last Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {#each $filteredProgArray as program}\r\n              <tr class=\"clickable-row\">\r\n                <td class=\"table-entry\">{program.name}</td>\r\n                <td class=\"table-entry\">{program.created_at}</td>\r\n                <td class=\"table-entry\">{program.updated_at}</td>\r\n              </tr>\r\n              {/each}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      \r\n      {/if}\r\n  </div>\r\n\r\n    \r\n  </main>\r\n   \r\n   \r\n      \r\n\r\n    \r\n\r\n\r\n<style>\r\n  main {\r\n    padding: 0px;\r\n    margin: 0px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%\r\n    \r\n  }\r\n\r\n  \r\n  .user-details {\r\n    display: flex;\r\n    width: 90%;\r\n    padding: 10px;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n  }\r\n\r\n  .username {\r\n    font-size: 24px;\r\n    margin-bottom: 2px;\r\n  }\r\n\r\n  .user-role {\r\n    font-size: 18px;\r\n    color: #555;\r\n    margin: 3px 0px;\r\n  }\r\n\r\n  .avatar {\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .detail-button {\r\n  padding: 5px;\r\n  background-color: #f2f2f2;\r\n  color: #333;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.detail-button:hover {\r\n  background-color: #e6e6e6;\r\n}\r\n\r\n\r\n  \r\n\r\n  .card {\r\n  width: 80%;\r\n  padding: 15px;\r\n  margin: 15px;\r\n  margin-top: 0;\r\n  background-color: #f2f2f2;\r\n  border-radius: 4px;\r\n \r\n}\r\n\r\n.card-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.info-row {\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.info-label {\r\n  font-weight: bold;\r\n  margin-right: 8px;\r\n}\r\n\r\n.info-value {\r\n  flex-grow: 1;\r\n}\r\n\r\n\r\n.lower-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 90%;\r\n    margin-top: 0px;\r\n    padding-bottom: 10px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    overflow-x: scroll;\r\n  }\r\n\r\n  .tab-selector {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  width: 90%;\r\n}\r\n\r\n.tab-selector input[type=\"text\"] {\r\n  padding: 8px;\r\n  flex: 1;\r\n  margin-right: 10%;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.tab-selector input[type=\"text\"]:focus {\r\n  outline: none;\r\n  border-color: #999;\r\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.tab-selector button {\r\n  padding: 10px 20px;\r\n  background-color: #f2f2f2;\r\n  color: #333;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.tab-selector button.active {\r\n  background-color: #e6e6e6;\r\n}\r\n\r\n  .user-list-container{\r\n    position: relative;\r\n    height: 50vh;\r\n    overflow-y: scroll;\r\n    width: 100%;\r\n  }\r\n\r\n  \r\n  .user-table {\r\n    table-layout: auto;\r\n    margin-top: 0px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n    min-width: 800px;\r\n    overflow-x: scroll;\r\n}\r\n\r\n.table-heading {\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  \r\n}\r\n\r\n.table-entry {\r\n    text-align: center;\r\n    padding: 16px;\r\n    \r\n  }\r\n\r\ntable td {\r\n  text-align: center;\r\n  padding: 12px;\r\n  \r\n}\r\n.clickable-row {\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n\r\n  .clickable-row:hover {\r\n    background-color: lightgray;\r\n  }\r\n\r\n.sticky-header {\r\n    position: sticky;\r\n    top: 0;\r\n    background-color: #f5f5f5;\r\n  }\r\n\r\n\r\n\r\n</style>\r\n","<script>\r\n  import { subscribe } from 'svelte/internal';\r\n  import { currentUser } from '../stores.js';\r\n  import { currentProfile } from '../stores.js';\r\n  import { fetchFolders } from '../fileDbHandling.js';\r\n  import { fetchPrograms } from '../fileDbHandling.js';\r\n  import { logout } from '../loginService.js';\r\n  import { files } from '../stores.js';\r\n  import { programs } from '../stores.js';\r\n  \r\n\r\n  \r\n  \r\n  let folders = [];\r\n  let programArray = [];\r\n  let isProgramList = false;\r\n  let toggle = false;\r\n  let fwUpdate = false;\r\n  let programUpdate = true;\r\n  fetchFileHistory();\r\n\r\n\r\n  async function fetchFileHistory(){\r\n    let user_id = 0;\r\n    const unsubscribe = currentUser.subscribe(value => {\r\n        //console.log(value);\r\n        user_id = value.user_id;\r\n      });\r\n      unsubscribe();\r\n     \r\n    await fetchFolders(user_id);\r\n    unsubscribeFiles();\r\n   // console.log('folders');\r\n   // console.log(folders);\r\n  }\r\n\r\n  async function getFiles(item){\r\n    \r\n    \r\n    await fetchPrograms(item);\r\n   \r\n    toggleView();\r\n  }\r\n  const unsubscribeFiles = files.subscribe(filenames =>{\r\n    folders = [...filenames];\r\n  }\r\n  )\r\n\r\n  const unsubscribePrograms = programs.subscribe(filenames =>{\r\n    programArray = [...filenames];\r\n  }\r\n  )\r\n\r\n  function onLogout() {\r\n    \r\n    logout();\r\n  }\r\n  function toggleDetails (){\r\n      toggle = !toggle;\r\n  }\r\n  function toggleView() {\r\n    isProgramList = !isProgramList;\r\n  }\r\n  function handleKeyDown(event) {\r\n    if (event.key === \"Enter\" || event.key === \" \") {\r\n      // Call the toggleView function when Enter or Space key is pressed\r\n      toggleView();\r\n    }\r\n  }\r\n\r\n  function calculateExpiryDate(seconds, date) {\r\n  //console.log(date);\r\n  const parsedDate = new Date(date);\r\n\r\n  if (isNaN(parsedDate) || isNaN(seconds)) {\r\n    //console.log(\"notdate\");\r\n    return null; // Return null or handle the error in an appropriate way\r\n  }\r\n\r\n  const newDate = new Date(parsedDate.getTime() + seconds * 1000);\r\n  const formattedDate = newDate.toISOString().split(\"T\")[0];\r\n\r\n  return formattedDate;\r\n}\r\n\r\nfunction isDateExpired(expiryDate) {\r\n  const currentDate = new Date();\r\n  const expiryDateObj = new Date(expiryDate);\r\n  return expiryDateObj < currentDate;\r\n}\r\n</script>\r\n\r\n<main>\r\n  \r\n    <div class=\"user-details\">\r\n      <div class=\"user-info\">\r\n        <h3 class=\"username\">{$currentProfile.name} {$currentProfile.surname}</h3>\r\n        <p class=\"user-role\">User</p>\r\n        <button class=\"detail-button\" on:click={toggleDetails}>Details</button>\r\n      </div>\r\n      <div>\r\n        <img src=\"avatar.png\" alt=\"User Avatar\" class=\"avatar\" />\r\n      </div>\r\n    </div>\r\n\r\n    {#if toggle}\r\n      <div class=\"card\">\r\n        <div class=\"card-content\">\r\n          <div class=\"info-row\">\r\n            <div class=\"info-label\">Email Address:</div>\r\n            <div class=\"info-value\">{$currentProfile.email}</div>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <div class=\"info-label\">Date of Birth:</div>\r\n            <div class=\"info-value\">{$currentProfile.date_of_birth}</div>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <div class=\"info-label\">Phone Number:</div>\r\n            <div class=\"info-value\">{$currentProfile.phone_number}</div>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <div class=\"info-label\">Address:</div>\r\n            <div class=\"info-value\">{$currentProfile.address}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    {/if}\r\n\r\n\r\n\r\n    <div class=\"lower-container\">\r\n      {#if !isProgramList}\r\n      <div class=\"user-list-container\">\r\n        <div class=\"file-list\">\r\n          <table class=\"user-table\">\r\n            <thead class=\"sticky-header\"> \r\n              <tr>\r\n                <th class=\"table-heading\">Name</th>\r\n                <th class=\"table-heading\">Created</th>\r\n                <th class=\"table-heading\">Expiry</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {#each folders as folder}\r\n              <tr class=\"clickable-row\" on:click={getFiles(folder.id)}>\r\n                <td class=\"table-entry\">{folder.name}</td> \r\n                <td class=\"table-entry\">{folder.created_at}</td>             \r\n                \r\n                {#if isDateExpired(calculateExpiryDate(folder.expires_in, folder.created_at))}\r\n                  <td class=\"table-entry expired\">\r\n                    {calculateExpiryDate(folder.expires_in, folder.created_at)}\r\n                  </td>\r\n                {:else}\r\n                  <td class=\"table-entry\">\r\n                    {calculateExpiryDate(folder.expires_in, folder.created_at)}\r\n                  </td>\r\n                {/if}\r\n\r\n              </tr>\r\n              {/each}\r\n            </tbody>\r\n          </table>\r\n          \r\n        </div>\r\n      </div>\r\n      {/if}\r\n\r\n      {#if isProgramList}\r\n      <button class=\"back-button\" on:click={toggleView}>Go Back</button>\r\n      <div class=\"user-list-container\">\r\n        <div class=\"file-list\">\r\n          <table class=\"user-table\">\r\n            <thead class=\"sticky-header\">\r\n              <tr>\r\n                <th class=\"table-heading\">Name</th>\r\n                <th class=\"table-heading\">Created</th>\r\n                <th class=\"table-heading\">Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {#each programArray as program}\r\n              <tr on:click={toggleView}>\r\n                <td class=\"table-entry\">{program.name}</td>\r\n                <td class=\"table-entry\">{program.created_at}</td>\r\n                <td class=\"table-entry\">{program.updated_at}</td>\r\n              </tr>\r\n              {/each}\r\n            </tbody>\r\n          </table>\r\n          \r\n        </div>\r\n        \r\n      </div>\r\n      \r\n      {/if}\r\n    </div>\r\n    \r\n  \r\n</main>\r\n\r\n<style>\r\n  main {\r\n    padding: 0px;\r\n    margin: 0px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%\r\n    \r\n  }\r\n\r\n  \r\n  .user-details {\r\n    display: flex;\r\n    width: 90%;\r\n    padding: 10px;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n  }\r\n\r\n  .username {\r\n    font-size: 24px;\r\n    margin-bottom: 2px;\r\n  }\r\n\r\n  .user-role {\r\n    font-size: 18px;\r\n    color: #555;\r\n    margin: 3px 0px;\r\n  }\r\n\r\n  .avatar {\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .detail-button {\r\n  padding: 5px;\r\n  background-color: #f2f2f2;\r\n  color: #333;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.detail-button:hover {\r\n  background-color: #e6e6e6;\r\n}\r\n\r\n\r\n  .lower-container {\r\n    display: flex;\r\n    flex-direction: row;\r\n    width: 90%;\r\n    margin-top: 20px;\r\n    padding-bottom: 30px;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  \r\n  .file-list {\r\n    width: 90%;\r\n    justify-content: left;\r\n    background-color: #fff; /* Very light gray background color */\r\n    text-align: left;\r\n    padding: 10px;\r\n    padding-top: 0;\r\n    border-radius: 8px;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    max-height: 250px;\r\n    /*overflow-y: auto;*/\r\n  }\r\n\r\n  .card {\r\n  width: 80%;\r\n  padding: 15px;\r\n  margin: 15px;\r\n  margin-top: 0;\r\n  background-color: #f2f2f2;\r\n  border-radius: 4px;\r\n \r\n}\r\n\r\n.card-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.info-row {\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.info-label {\r\n  font-weight: bold;\r\n  margin-right: 8px;\r\n}\r\n\r\n.info-value {\r\n  flex-grow: 1;\r\n}\r\n.user-table {\r\n    table-layout: auto;\r\n    margin-top: 0px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n    min-width: 500px;\r\n    overflow-x: scroll;\r\n}\r\n\r\n.table-heading {\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  \r\n}\r\n\r\n.table-entry {\r\n    text-align: center;\r\n    padding: 16px;\r\n    \r\n  }\r\n\r\ntable td {\r\n  text-align: center;\r\n  padding: 12px;\r\n  \r\n}\r\n.clickable-row {\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n\r\n  .clickable-row:hover {\r\n    background-color: lightgray;\r\n  }\r\n\r\n.sticky-header {\r\n    position: sticky;\r\n    top: 0;\r\n    background-color: #f5f5f5;\r\n  }\r\n\r\n  .user-list-container{\r\n    position: relative;\r\n    height: 60vh;\r\n    overflow-y: scroll;\r\n    width: 100%;\r\n  }\r\n\r\n  .expired {\r\n    color: red;\r\n  }\r\n\r\n  .back-button {\r\n    background-color: blue;\r\n    border: none;\r\n    color: white;\r\n    padding: 10px 20px;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .back-button::before {\r\n    content: '\\2190'; /* Unicode character for left arrow */\r\n    margin-right: 5px;\r\n  }\r\n\r\n</style>\r\n","<script>\r\n  import {currentUser} from '../stores.js'\r\n  import { logout } from '../loginService.js';\r\n  import { currentProfile } from '../stores.js';\r\n  \r\n  import Admin from '../roles/Admin.svelte';\r\n  import Professional from '../roles/Professional.svelte';\r\n  import User from '../roles/User.svelte';\r\n  import { onMount } from 'svelte';\r\n\r\n  onMount(() => {\r\n    const script = document.createElement('script');\r\n    script.src = 'https://kit.fontawesome.com/6419d82e9f.js'; // Replace with your Font Awesome kit URL\r\n    script.async = true;\r\n    document.head.appendChild(script);\r\n  });\r\n\r\n\r\n  function onLogout() {\r\n    \r\n    logout();\r\n  }\r\n\r\n</script>\r\n\r\n\r\n<main>\r\n  <div class=\"container\">\r\n    <header class=\"header\">\r\n      <div class=\"logo-container\">\r\n        <img src=\"inhealion.png\" alt=\"Inhealion Logo\" class=\"logo-small\" />\r\n        <h2 class=\"company-name\">Inhealion</h2>\r\n      </div>\r\n      <div class = \"status-panel\">\r\n      <div class=\"user-icon\">\r\n        {#if $currentUser.user_role === \"Administrator\"}\r\n          <i class=\"fa-solid fa-user-shield\"></i>\r\n        {:else if $currentUser.user_role === \"Professional\" || $currentUser.user_role === \"S. Professional\"}\r\n          <i class=\"fa-solid fa-user-tie\"></i>\r\n        {:else}\r\n          <i class=\"fa-solid fa-user\"></i>\r\n        {/if}\r\n      </div>\r\n      <div class=\"user-details\">\r\n        <h3 class=\"username\">{$currentProfile.name} {$currentProfile.surname}</h3>    \r\n        <p class=\"user-role\">{$currentUser.user_role}</p>                  \r\n      </div>\r\n      <div class = \"logout-section\">\r\n        <button class=\"logout-button\" on:click={onLogout}>\r\n          <i class=\"fa-solid fa-sharp fa-arrow-right-from-bracket\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    </header> \r\n    {#if $currentUser.loggedIn}\r\n    <div class = \"subcontainer\">\r\n      {#if $currentUser.user_role === \"Administrator\"}\r\n      <Admin />\r\n      {:else if $currentUser.user_role === \"Professional\" || $currentUser.user_role === \"S. Professional\"}\r\n        <Professional />\r\n      {:else}\r\n        <User />\r\n      {/if}\r\n    </div>\r\n     \r\n  {/if}\r\n</div>  \r\n</main>\r\n\r\n\r\n\r\n\r\n  <style>\r\n    main {\r\n    padding: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    height: 100vh;\r\n    min-width: 100vw;\r\n    margin: 0;\r\n  }\r\n    \r\n    .container {\r\n      height: 100%;\r\n      min-width: 100vw;\r\n      margin: 0;\r\n      background-color: #fff;\r\n      padding: 0px; /* Remove padding around the container */\r\n      display: flex;\r\n      flex-direction: column;\r\n    \r\n  }\r\n\r\n  .subcontainer {\r\n    flex-grow: 1;\r\n    max-height: 80vh;\r\n  }\r\n\r\n  .header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n    background-color: #efeeee;\r\n    \r\n  }\r\n\r\n  .status-panel{\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n\r\n  .user-icon {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 2px 10px;\r\n    font-size: 24px;\r\n  }\r\n\r\n  .user-details {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: start;\r\n    justify-content: center;\r\n    margin: 2px 10px;\r\n    font-size: 24px;\r\n  }\r\n\r\n  .logout-section {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .logo-container {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px;\r\n    margin-left: 10px;\r\n  }\r\n\r\n  .logo-small {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n\r\n  .company-name {\r\n    color: #00b6a0;\r\n    font-size: 20px;\r\n    margin-left: 10px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .logout-button {\r\n    padding: 8px;\r\n    margin: 2px;\r\n    margin-right: 10px;\r\n    background-color: transparent;\r\n    color: #00b6a0;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    font-weight: normal;\r\n    font-size: 24px;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n\r\n  .logout-button:hover {\r\n    color: #a42e2e;\r\n    background-color: #f4eeee;\r\n  }\r\n\r\n  .user-role {\r\n    font-size: 11px;\r\n    color: #555;\r\n    margin: 3px 0px;\r\n  }\r\n  .username {\r\n    font-size: 13px;\r\n    margin-bottom: 2px;\r\n    margin-top: 2px;\r\n  }\r\n\r\n\r\n\r\n \r\n  @media (max-width: 768px) {\r\n        .container {\r\n            max-width: 400px;\r\n            padding: 30px;\r\n        }\r\n    }\r\n\r\n  \r\n\r\n  </style>\r\n\r\n\r\n","<main>\r\n    <h1>About</h1>\r\n    <p>This is the About page.</p>\r\n  </main>\r\n  \r\n  <style>\r\n    main {\r\n      padding: 20px;\r\n    }\r\n  \r\n    h1 {\r\n      color: #333;\r\n      font-size: 24px;\r\n      margin-bottom: 10px;\r\n    }\r\n  \r\n    p {\r\n      color: #666;\r\n      font-size: 16px;\r\n    }\r\n  </style>\r\n  ","<script>\r\n  import { loginUser } from '../loginService.js';\r\n\r\n  let username = '';\r\n  let password = '';\r\n\r\n  function onLogin() {\r\n    // Login functionality\r\n    //console.log('Username:', username);\r\n    //console.log('Password:', password);\r\n    loginUser(username, password);\r\n  }\r\n</script>\r\n\r\n<main>\r\n  <div class=\"container\">\r\n    <img src=\"inhealion-named.png\" alt=\"Inhealion Logo\" class=\"logo\" />\r\n    <h1>Login</h1>\r\n    <form on:submit|preventDefault={onLogin}>\r\n      <label>\r\n        Username:\r\n        <input type=\"text\" bind:value={username} />\r\n      </label>\r\n      <label>\r\n        Password:\r\n        <input type=\"password\" bind:value={password} />\r\n      </label>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  </div>\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    padding: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n    min-width: 100vw;\r\n    margin: 0;\r\n  }\r\n\r\n  \r\n\r\n  .container {\r\n    width: 90%;\r\n    max-width: 400px;\r\n    background-color: #fff;\r\n    padding: 40px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .logo {\r\n  display: block;\r\n  margin: 0 auto;\r\n  max-width: 200px;\r\n  height: auto;\r\n  }\r\n\r\n  h1 {\r\n    color: #333;\r\n    font-size: 24px;\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n  }\r\n\r\n  form {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n\r\n  label {\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-weight: bold;\r\n  }\r\n\r\n  input {\r\n    padding: 10px;\r\n    border: none;\r\n    border-bottom: 1px solid #ccc;\r\n    outline: none;\r\n    transition: border-color 0.3s ease;\r\n  }\r\n\r\n  input:focus {\r\n    border-color: #007bff;\r\n  }\r\n\r\n  button {\r\n    padding: 12px;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n\r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .container {\r\n      max-width: 300px;\r\n      padding: 30px;\r\n    }\r\n  }\r\n</style>\r\n","export function uploadFile(file, userId, update) {\r\n  return new Promise((resolve, reject) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('user_id', userId);\r\n    if (update) {\r\n      formData.append('update', 'true');\r\n    }\r\n    fetch('https://inhealion.gr/program-handler.php', {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          console.log(\"File uploaded successfully\");\r\n          resolve(); // Resolve the Promise without any value\r\n          alert('File uploaded successfully');\r\n        } else if (response.status === 409) {\r\n          alert('Duplicate file error. File with the same name already exists.');\r\n          reject(new Error('Duplicate file error'));\r\n        } else if (response.status === 401) {\r\n          alert('Unauthorized. Please log in to access this functionality.');\r\n          reject(new Error('Unauthorized error'));\r\n        } else {\r\n          alert('Failed to upload file. Internal server error occurred.');\r\n          reject(new Error('Failed to upload file'));\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('An error occurred:', error);\r\n        alert('An error occurred. Please try again later.');\r\n        reject(error); // Reject the Promise with the error\r\n      });\r\n  });\r\n}\r\n\r\n\r\nexport function uploadFileById(file, userId, update) {\r\n  return new Promise((resolve, reject) => {\r\n    const formData = new FormData();\r\n    formData.append('file_id', file);\r\n    formData.append('user_id', userId);\r\n    if (update) {\r\n      formData.append('update', 'true');\r\n    }\r\n    fetch('https://inhealion.gr/program-handler-pro.php', {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          console.log(\"File uploaded successfully\");\r\n          resolve(); // Resolve the Promise without any value\r\n          //alert('File uploaded successfully');\r\n        } else if (response.status === 409) {\r\n          alert('Duplicate file error. File with the same name already exists.');\r\n          reject(new Error('Duplicate file error'));\r\n        } else if (response.status === 401) {\r\n          alert('Unauthorized. Please log in to access this functionality.');\r\n          reject(new Error('Unauthorized error'));\r\n        } else {\r\n          alert('Failed to upload file. Internal server error occurred.');\r\n          reject(new Error('Failed to upload file'));\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('An error occurred:', error);\r\n        alert('An error occurred. Please try again later.');\r\n        reject(error); // Reject the Promise with the error\r\n      });\r\n  });\r\n}\r\n","<script>\r\n  import { addingStatus, allProfs, altProfile, files, programs } from \"../stores\";\r\n  import { fetchFolders, fetchPrograms } from '../fileDbHandling.js';\r\n  import { createEventDispatcher } from 'svelte';\r\n  import { renewFolderExpirationDate } from \"../fileDbHandling.js\";\r\n  import{uploadFile} from \"../file-handler.js\";\r\n  import { updateProfessional } from \"../fileDbHandling.js\";\r\n  import { getAltProfile } from \"../fileDbHandling.js\";\r\n\r\n  let toggle = false;\r\n  let currentProfile;\r\n  let folders = [];\r\n  let programArray = [];\r\n  let isProgramList = false;\r\n  let user_id = 0;\r\n  let selectedProfessional;\r\n  let currentFolder;\r\n\r\n  \r\n  \r\n  const unsubscribeId = altProfile.subscribe(aId => {\r\n    currentProfile = aId;\r\n    user_id = aId.user_id;\r\n    console.log(currentProfile);\r\n    \r\n  });\r\n\r\n  unsubscribeId();\r\n  \r\n  if(user_id){\r\n    fetchFileHistory();\r\n  }\r\n\r\n\r\n  async function fetchFileHistory() {\r\n   \r\n    await fetchFolders(user_id);\r\n    const unsubscribeFiles = files.subscribe(filenames => {\r\n    folders = [...filenames];\r\n    \r\n    });\r\n    unsubscribeFiles();\r\n  }\r\n\r\n \r\n\r\n  const unsubscribePrograms = programs.subscribe(filenames => {\r\n    programArray = [...filenames];\r\n  });\r\n\r\n  async function getFilesTrigger(item){\r\n    currentFolder = item;\r\n    await getFiles();\r\n    toggleView();\r\n  }\r\n  async function getFiles() {\r\n    await fetchPrograms(currentFolder);\r\n  }\r\n\r\n  function toggleView() {\r\n    isProgramList = !isProgramList;\r\n  }\r\n\r\n  function renew(id) {\r\n    console.log(id);\r\n  }\r\n\r\n  function goBack() {\r\n    if (isProgramList) {\r\n      isProgramList = false;\r\n    } else {\r\n      addingStatus.set(0);\r\n    }\r\n  }\r\n\r\n  function toggleDetails() {\r\n    toggle = !toggle;\r\n  }\r\n\r\n//pop up for program renewal\r\n\r\n  let showModal = false;\r\n  let modalContent;\r\n  let modalID;\r\n  let renewDate = '';\r\n  let initDate = '';\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  function openModal(folder) {\r\n    showModal = true;\r\n    modalContent = \"Renew Program\";\r\n    modalID = folder.id;\r\n    initDate = folder.created_at;\r\n    console.log(folder.created_at);\r\n    \r\n  }\r\n\r\n  function closeModal() {\r\n    showModal = false;\r\n    modalContent = '';\r\n  }\r\n\r\n  async function renewProgram() {\r\n    // Call your renewProgram function with the entered date (renewDate)\r\n    // Example: renewProgram(renewDate)\r\n\r\n    // Close the modal after calling the function\r\n    \r\n    let n = calculateDateDifferenceInSeconds(renewDate,initDate);\r\n    \r\n    await renewFolderExpirationDate(n, modalID);\r\n    await fetchFileHistory();\r\n    closeModal();\r\n  }\r\n\r\n  function calculateDateDifferenceInSeconds(renewDate, initDate) {\r\n  const renewDateTime = new Date(renewDate).getTime();\r\n  const initDateTime = new Date(initDate).getTime();\r\n  const differenceInSeconds = Math.floor((renewDateTime - initDateTime) / 1000);\r\n  return differenceInSeconds;\r\n}\r\n\r\nfunction calculateExpiryDate(seconds, date) {\r\n  //console.log(date);\r\n  const parsedDate = new Date(date);\r\n\r\n  if (isNaN(parsedDate) || isNaN(seconds)) {\r\n    //console.log(\"notdate\");\r\n    return null; // Return null or handle the error in an appropriate way\r\n  }\r\n\r\n  const newDate = new Date(parsedDate.getTime() + seconds * 1000);\r\n  const formattedDate = newDate.toISOString().split(\"T\")[0];\r\n\r\n  return formattedDate;\r\n}\r\n\r\nfunction isDateExpired(expiryDate) {\r\n  const currentDate = new Date();\r\n  const expiryDateObj = new Date(expiryDate);\r\n  \r\n  return expiryDateObj < currentDate;\r\n}\r\n\r\nfunction openPopup(n) {\r\n  console.log(\"opening popups\");\r\n  if( n == 1)\r\n  {\r\n    const popup = document.getElementById('uploadPopup');\r\n    //console.log(\"opening popup 1\");\r\n    popup.style.display = 'block';\r\n    const userIdInput = document.getElementById('userIdInput');\r\n    userIdInput.value = currentProfile.user_id;\r\n  }else if(n == 2) {\r\n    const popup = document.getElementById('addProfPopup');\r\n    //console.log(\"opening popup 2\");\r\n    popup.style.display = 'block';\r\n    const userIdInput = document.getElementById('userIdInput2');\r\n    userIdInput.value = currentProfile.user_id;\r\n\r\n  }\r\n  \r\n  //console.log(currentProfile);\r\n}\r\n\r\nfunction closePopup(n) {\r\n  if(n == 1){\r\n    const popup = document.getElementById('uploadPopup');\r\n    popup.style.display = 'none';\r\n  }else if(n == 2){\r\n    const popup = document.getElementById('addProfPopup');\r\n    popup.style.display = 'none';\r\n  }\r\n  \r\n}\r\n\r\nasync function uploadFileFromPopup() {\r\n  const fileInput = document.getElementById('fileInput');\r\n  const userIdInput = document.getElementById('userIdInput');\r\n  const updateCheckbox = document.getElementById('updateCheckbox');\r\n\r\n  const file = fileInput.files[0];\r\n  const userId = userIdInput.value;\r\n  const update = updateCheckbox.checked;\r\n\r\n  if (file && userId) {\r\n    await uploadFile(file, userId, update);\r\n    closePopup(1);\r\n    await fetchFileHistory();\r\n    await getFiles();\r\n    \r\n  } else {\r\n    console.error('Please select a file and provide a user ID.');\r\n  }\r\n}\r\n\r\nasync function updateProfessionalfromPopup() {\r\n  try {\r\n    await updateProfessional(user_id, selectedProfessional);\r\n    await getAltProfile(user_id);\r\n    const unsubscribeId = altProfile.subscribe(aId => {\r\n    currentProfile = aId;\r\n    user_id = aId.user_id;\r\n  });\r\n  unsubscribeId();\r\n  console.log(currentProfile);\r\n    // Promise resolved successfully, show success alert\r\n    closePopup(2);\r\n    alert('Professional updated successfully');\r\n    \r\n  } catch (error) {\r\n    // Promise rejected or an error occurred, show error alert\r\n    if (error.message === 'Professional not found') {\r\n      alert('Professional not found');\r\n    } else if (error.message === 'Internal server error') {\r\n      alert('Internal server error');\r\n    } else {\r\n      alert('An unknown error occurred');\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction updateId() {\r\n  const userIdInput = document.getElementById('userIdInput');\r\n    userIdInput.value = currentProfile.id;\r\n    console.log(currentProfile);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<!-- Rest of the HTML code remains the same -->\r\n\r\n<main>\r\n  <div class=\"container\">\r\n    <div class=\"user-details\">\r\n      <div class=\"user-info\">\r\n        <h3 class=\"username\">{currentProfile.name} {currentProfile.surname}</h3>\r\n        <p class=\"user-role\">User</p>\r\n        <button class=\"detail-button\" on:click={toggleDetails}>Details</button>\r\n      </div>\r\n      <div>\r\n        <img src=\"avatar.png\" alt=\"User Avatar\" class=\"avatar\" />\r\n      </div>\r\n    </div>\r\n\r\n    {#if toggle}\r\n    <div class=\"card\">\r\n      <div class=\"card-content\">\r\n        <div class=\"info-row\">\r\n          <div class=\"info-label\">Email Address:</div>\r\n          <div class=\"info-value\">{currentProfile.email}</div>\r\n        </div>\r\n        <div class=\"info-row\">\r\n          <div class=\"info-label\">Date of Birth:</div>\r\n          <div class=\"info-value\">{currentProfile.date_of_birth}</div>\r\n        </div>\r\n        <div class=\"info-row\">\r\n          <div class=\"info-label\">Phone Number:</div>\r\n          <div class=\"info-value\">{currentProfile.phone_number}</div>\r\n        </div>\r\n        <div class=\"info-row\">\r\n          <div class=\"info-label\">Professional:</div>\r\n          <div class=\"info-value\">{currentProfile.professional}</div>\r\n        </div>\r\n\r\n        <div class=\"info-row\">\r\n          <div class=\"info-label\">Address:</div>\r\n          <div class=\"info-value\">{currentProfile.address}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {/if}\r\n\r\n    <div class=\"lower-container\">\r\n      {#if !isProgramList}\r\n      <div class=\"user-list-container\">\r\n        <div class=\"file-list\">\r\n          <table class=\"user-table\">\r\n            <thead class=\"sticky-header\">\r\n              <tr>\r\n                <th class=\"table-heading\">Name</th>\r\n                <th class=\"table-heading\">Expiry</th>\r\n                <th class=\"table-heading\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {#each folders as folder}\r\n              <tr>\r\n                <td class=\"table-entry clickable-row\" on:click={getFilesTrigger(folder.id)} on:keydown={getFilesTrigger(folder.id)}>{folder.name}</td>             \r\n                \r\n                {#if isDateExpired(calculateExpiryDate(folder.expires_in, folder.created_at))}\r\n                  <td class=\"table-entry expired\">\r\n                    {calculateExpiryDate(folder.expires_in, folder.created_at)}\r\n                  </td>\r\n                {:else}\r\n                  <td class=\"table-entry\">\r\n                    {calculateExpiryDate(folder.expires_in, folder.created_at)}\r\n                  </td>\r\n                {/if}\r\n\r\n                \r\n                <td class=\"table-entry\">\r\n                  <button on:click={openModal(folder)}>Renew</button>\r\n                </td>\r\n              </tr>\r\n              {/each}\r\n            </tbody>\r\n          </table>\r\n          \r\n        </div>\r\n      </div>\r\n      {/if}\r\n\r\n      {#if isProgramList}\r\n      <div class=\"user-list-container\">\r\n        <div class=\"file-list\">\r\n          <table class=\"user-table\">\r\n            <thead class=\"sticky-header\">\r\n              <tr>\r\n                <th class=\"table-heading\">Name</th>\r\n                <th class=\"table-heading\">Created</th>\r\n                <th class=\"table-heading\">Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {#each programArray as program}\r\n              <tr on:click={toggleView}>\r\n                <td class=\"table-entry\">{program.name}</td>\r\n                <td class=\"table-entry\">{program.created_at}</td>\r\n                <td class=\"table-entry\">{program.updated_at}</td>\r\n              </tr>\r\n              {/each}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      {/if}\r\n    </div>\r\n    <div class=\"button-container\">\r\n      <button on:click={goBack}>Go Back</button>\r\n      <button on:click={() => openPopup(1)}>Upload</button>\r\n      <button on:click={() => openPopup(2)}>Update Professional</button>\r\n    </div>\r\n  </div>\r\n\r\n  {#if showModal}\r\n  <div class=\"modal\">\r\n    <div class=\"modal-content\">\r\n      <span class=\"close\" on:click={closeModal} on:keydown={closeModal}>&times;</span>\r\n      <h3>{modalContent}</h3>\r\n      <form on:submit|preventDefault={renewProgram}>\r\n        <label for=\"renewDate\">Renew Date:</label>\r\n        <input type=\"date\" id=\"renewDate\" bind:value={renewDate} required />\r\n        <button type=\"submit\">Renew</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n{/if}\r\n<div id=\"uploadPopup\" class=\"popup\">\r\n  <div class=\"popup-content\">\r\n    <h2>Upload File</h2>\r\n    <input type=\"file\" id=\"fileInput\">\r\n    <input type=\"text\" id=\"userIdInput\" placeholder=\"User ID\" readonly>\r\n    <label>\r\n      <input type=\"checkbox\" id=\"updateCheckbox\">\r\n      Update existing file\r\n    </label>\r\n    <button on:click={uploadFileFromPopup}>Upload</button>\r\n    <button on:click={()=> closePopup(1)}>Close</button>\r\n  </div>\r\n</div>\r\n\r\n<div id=\"addProfPopup\" class=\"popup2\">\r\n  <div class=\"popup-content\">\r\n    <h2>Add Professional</h2>\r\n    <input type=\"text\" id=\"userIdInput2\" placeholder=\"User ID\" readonly>\r\n    <label for=\"updateDropdown\">Select a professional:</label>\r\n    <select id=\"updateDropdown\" bind:value={selectedProfessional}>\r\n      {#each $allProfs as option}\r\n        <option value={option.user_id}>{option.name} {option.surname}</option>\r\n      {/each}\r\n    </select>\r\n    <button on:click={updateProfessionalfromPopup}>Update</button>\r\n    <button on:click={() => closePopup(2)}>Close</button>\r\n  </div>\r\n</div>\r\n\r\n\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    padding: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n    min-width: 100vw;\r\n    margin: 0;\r\n  }\r\n\r\n    .container {\r\n        min-height: 100vh;\r\n        min-width: 100vw;\r\n        margin: 0;\r\n        background-color: #fff;\r\n        padding: 40px;\r\n        border-radius: 8px;\r\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n\r\n    \r\n    button {\r\n        margin-top: 10px;\r\n        background-color: #007bff;\r\n        color: #fff;\r\n        padding: 12px;\r\n        border: none;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n        transition: background-color 0.3s ease;\r\n    }\r\n\r\n    button:hover {\r\n        background-color: #0056b3;\r\n    }\r\n\r\n    .user-details {\r\n    display: flex;\r\n    width: 90%;\r\n    padding: 10px;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n  }\r\n\r\n  .username {\r\n    font-size: 24px;\r\n    margin-bottom: 2px;\r\n  }\r\n\r\n  .user-role {\r\n    font-size: 18px;\r\n    color: #555;\r\n    margin: 3px 0px;\r\n  }\r\n\r\n  .avatar {\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .detail-button {\r\n  padding: 5px;\r\n  background-color: #f2f2f2;\r\n  color: #333;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.detail-button:hover {\r\n  background-color: #e6e6e6;\r\n}\r\n\r\n.card {\r\n  width: 80%;\r\n  padding: 15px;\r\n  margin: 15px;\r\n  margin-top: 0;\r\n  background-color: #f2f2f2;\r\n  border-radius: 4px;\r\n \r\n}\r\n\r\n.card-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.info-row {\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.info-label {\r\n  font-weight: bold;\r\n  margin-right: 8px;\r\n}\r\n\r\n.info-value {\r\n  flex-grow: 1;\r\n}\r\n\r\n\r\n\r\n.lower-container {\r\n    display: flex;\r\n    flex-direction: row;\r\n    width: 90%;\r\n    margin-top: 20px;\r\n    padding-bottom: 30px;\r\n    justify-content: space-between;\r\n  }\r\n  .user-table {\r\n    table-layout: auto;\r\n    margin-top: 0px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n    min-width: 500px;\r\n    overflow-x: scroll;\r\n}\r\n\r\n.table-heading {\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  \r\n}\r\n\r\n.table-entry {\r\n    text-align: center;\r\n    padding: 16px;\r\n    \r\n  }\r\n\r\ntable td {\r\n  text-align: center;\r\n  padding: 12px;\r\n  \r\n}\r\n.clickable-row {\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n\r\n  .clickable-row:hover {\r\n    background-color: lightgray;\r\n  }\r\n\r\n.sticky-header {\r\n    position: sticky;\r\n    top: 0;\r\n    background-color: #f5f5f5;\r\n  }\r\n\r\n  .user-list-container{\r\n    position: relative;\r\n    height: 60vh;\r\n    overflow-y: scroll;\r\n    width: 100%;\r\n  }\r\n\r\n\r\n  .modal {\r\n    display: block;\r\n    position: fixed;\r\n    z-index: 1;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n\r\n  .modal-content {\r\n    background-color: #fefefe;\r\n    margin: 15% auto;\r\n    padding: 20px;\r\n    border: 1px solid #888;\r\n    width: 80%;\r\n    max-width: 400px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    position: relative;\r\n  }\r\n\r\n  .close {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    color: #aaa;\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n    padding: 4px 8px;\r\n    cursor: pointer;\r\n  }\r\n  .expired {\r\n    color: red;\r\n  }\r\n\r\n\r\n\r\n  .button-container {\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n\r\n  /* Popup styles */\r\n.popup {\r\n  display: none;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 9999;\r\n}\r\n\r\n.popup2 {\r\n  display: none;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 9999;\r\n}\r\n\r\n.popup-content {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n}\r\n\r\n\r\n    @media (max-width: 768px) {\r\n        .container {\r\n            max-width: 400px;\r\n            padding: 30px;\r\n        }\r\n    }\r\n\r\n\r\n</style>\r\n","<script>\r\n    import { addingStatus, altProfile, files, programs, filteredUserArray, filteredProgArray, allUsers, profProgs} from \"../stores\";\r\n    import { fetchFolders } from '../fileDbHandling.js';\r\n    import { fetchPrograms } from '../fileDbHandling.js';\r\n    import { fetchProfProgs } from \"../fileDbHandling.js\";\r\n    import { updateProfessional } from \"../fileDbHandling.js\";\r\n    import { fetchUsers } from \"../fileDbHandling.js\";\r\n    import{uploadFile} from \"../file-handler.js\";\r\n  \r\n    \r\n\r\n    let toggle = false;\r\n    let searchTerm = \"\";\r\n    let currentProfile;\r\n    let folders = [];\r\n    let programArray = [];\r\n    let isProgramList = false;\r\n    let user_id = 3;\r\n    let activeTab = 'users';\r\n    let userArray = [];\r\n    let ProgArray = [];\r\n    \r\n    let selectedUser;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const unsubscribeId = altProfile.subscribe(aId => {\r\n        currentProfile = aId;\r\n        user_id = aId.user_id; \r\n        //console.log(currentProfile);   \r\n    });\r\n\r\n    unsubscribeId();\r\n    const unsubscribeProgs = profProgs.subscribe(progs => {\r\n      ProgArray = progs.filter(prog => prog.professional_id === user_id);\r\n      filteredProgArray.set(ProgArray);\r\n    });\r\n    unsubscribeProgs();\r\n\r\n    const unsubscribeUsers = allUsers.subscribe(users => {\r\n      userArray = users.filter(user => user.professional_id === user_id);\r\n      filteredUserArray.set(userArray);\r\n    });\r\n    unsubscribeUsers();\r\n\r\n\r\n\r\n\r\n    function goBack() {\r\n        if(isProgramList){\r\n            isProgramList = false;\r\n        }\r\n        else{\r\n            addingStatus.set(0);\r\n        }\r\n    }\r\n\r\n    function toggleDetails (){\r\n      toggle = !toggle;\r\n  }\r\n\r\n  function handleSearch(event) {\r\n  \r\n  searchTerm = event.target.value.toLowerCase();\r\n  //console.log(searchTerm);\r\n  filteredUserArray.set(\r\n    userArray.filter(user => {\r\n      return (\r\n        user.name.toLowerCase().includes(searchTerm) ||\r\n        user.surname.toLowerCase().includes(searchTerm) ||\r\n        user.email.toLowerCase().includes(searchTerm) ||\r\n        user.phone_number.toLowerCase().includes(searchTerm) ||\r\n        user.date_of_birth.toLowerCase().includes(searchTerm)\r\n      );\r\n    })\r\n  );\r\n\r\n  filteredProgArray.set(\r\n    ProgArray.filter(program => {\r\n      return (\r\n        program.name.toLowerCase().includes(searchTerm)\r\n                \r\n      );\r\n    })\r\n  );\r\n}\r\nfunction switchTab(tab) {\r\n  activeTab = tab;\r\n}\r\nfunction openUser(id) {\r\n  console.log(id);\r\n  addingStatus.set(2);\r\n  altProfile.set(findUserById(id));\r\n}\r\n\r\nfunction openProfessional(id) {\r\n  console.log(\"opening prof\");\r\n  addingStatus.set(3);\r\n  altProfile.set(findProgramById(id));\r\n}\r\n\r\nfunction findUserById(id) {\r\n  return userArray.find(user => user.id === id) || null;\r\n}\r\nfunction findProgramById(id) {\r\n  return ProgArray.find(user => user.id === id) || null;\r\n}\r\n\r\nfunction openPopup(n) {\r\n  console.log(\"opening popups\");\r\n  if( n == 1)\r\n  {\r\n    const popup = document.getElementById('uploadPopup');\r\n    //console.log(\"opening popup 1\");\r\n    popup.style.display = 'block';\r\n    const userIdInput = document.getElementById('userIdInput');\r\n    userIdInput.value = currentProfile.user_id;\r\n  }else if(n == 2) {\r\n    const popup = document.getElementById('addProfPopup');\r\n    //console.log(\"opening popup 2\");\r\n    popup.style.display = 'block';\r\n    const userIdInput = document.getElementById('userIdInput2');\r\n    userIdInput.value = currentProfile.user_id;\r\n\r\n  }\r\n  \r\n  //console.log(currentProfile);\r\n}\r\n\r\nfunction closePopup(n) {\r\n  if(n == 1){\r\n    const popup = document.getElementById('uploadPopup');\r\n    popup.style.display = 'none';\r\n  }else if(n == 2){\r\n    const popup = document.getElementById('addProfPopup');\r\n    popup.style.display = 'none';\r\n  }\r\n  \r\n}\r\n\r\nasync function uploadFileFromPopup() {\r\n  const fileInput = document.getElementById('fileInput');\r\n  const userIdInput = document.getElementById('userIdInput');\r\n  const updateCheckbox = document.getElementById('updateCheckbox');\r\n\r\n  const file = fileInput.files[0];\r\n  const userId = userIdInput.value;\r\n  const update = updateCheckbox.checked;\r\n\r\n  if (file && userId) {\r\n    await uploadFile(file, userId, update);\r\n    await fetchFileHistory();\r\n    closePopup(1);\r\n  } else {\r\n    console.error('Please select a file and provide a user ID.');\r\n  }\r\n}\r\n\r\nasync function updateProfessionalfromPopup() {\r\n  try {\r\n    \r\n    console.log(\"Checking:\");\r\n    console.log(selectedUser);\r\n    console.log(user_id);\r\n    \r\n    await updateProfessional(selectedUser, user_id);\r\n    await fetchUsers();\r\n\r\n    // Promise resolved successfully, show success alert\r\n    const unsubscribeUsers = allUsers.subscribe(users => {\r\n      userArray = users.filter(user => user.professional_id === user_id);\r\n      filteredUserArray.set(userArray);\r\n      console.log(userArray);\r\n    });\r\n    unsubscribeUsers();\r\n    alert('Professional updated successfully');\r\n    \r\n    closePopup(2);\r\n  } catch (error) {\r\n    // Promise rejected or an error occurred, show error alert\r\n    if (error.message === 'Professional not found') {\r\n      alert('Professional not found');\r\n    } else if (error.message === 'Internal server error') {\r\n      alert('Internal server error');\r\n    } else {\r\n      alert('An unknown error occurred');\r\n    }\r\n  }\r\n}\r\nasync function fetchFileHistory() {\r\n    await fetchProfProgs();\r\n    const unsubscribeProgs = profProgs.subscribe(progs => {\r\n      ProgArray = progs.filter(prog => prog.professional_id === user_id);\r\n      filteredProgArray.set(ProgArray);\r\n    });\r\n    unsubscribeProgs();\r\n  }\r\n\r\n\r\n\r\n    \r\n</script>\r\n\r\n<main>\r\n    <div class=\"container\">\r\n        <div class=\"user-details\">\r\n            <div class=\"user-info\">\r\n              <h3 class=\"username\">{currentProfile.name} {currentProfile.surname}</h3>\r\n              <p class=\"user-role\">Professional</p>\r\n              <button class=\"detail-button\" on:click={toggleDetails}>Details</button>\r\n            </div>\r\n            <div>\r\n              <img src=\"avatar.png\" alt=\"User Avatar\" class=\"avatar\" />\r\n            </div>\r\n          </div>\r\n      \r\n          {#if toggle}\r\n            <div class=\"card\">\r\n              <div class=\"card-content\">\r\n                <div class=\"info-row\">\r\n                  <div class=\"info-label\">Email Address:</div>\r\n                  <div class=\"info-value\">{currentProfile.email}</div>\r\n                </div>\r\n                <div class=\"info-row\">\r\n                  <div class=\"info-label\">Date of Birth:</div>\r\n                  <div class=\"info-value\">{currentProfile.date_of_birth}</div>\r\n                </div>\r\n                <div class=\"info-row\">\r\n                  <div class=\"info-label\">Phone Number:</div>\r\n                  <div class=\"info-value\">{currentProfile.phone_number}</div>\r\n                </div>\r\n                <div class=\"info-row\">\r\n                  <div class=\"info-label\">Address:</div>\r\n                  <div class=\"info-value\">{currentProfile.address}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          {/if}\r\n          <div class=\"lower-container\">\r\n    \r\n      \r\n            <div class=\"tab-selector\">\r\n                <input type=\"text\" id=\"searchInput\" placeholder=\"Search...\" on:input={handleSearch} />\r\n                <button class=\"{activeTab === 'users' ? 'active' : ''}\" on:click={() => switchTab('users')}>Users</button>\r\n                <button class=\"{activeTab === 'programs' ? 'active' : ''}\" on:click={() => switchTab('programs')}>Programs</button>\r\n            </div>\r\n      \r\n            {#if activeTab === 'users'}\r\n            <div class=\"user-list-container\">\r\n              <div class=\"file-list\">\r\n                \r\n                <table class=\"user-table\">\r\n                  <!-- Table header -->\r\n                  <thead class=\"sticky-header\">\r\n                    <tr>\r\n                      <th class=\"table-heading\">Name</th>\r\n                      <th class=\"table-heading\">Email</th>\r\n                      <th class=\"table-heading\">Phone Number</th>\r\n                      <th class=\"table-heading\">Date of Birth</th>\r\n                    </tr>\r\n                  </thead>\r\n            \r\n                  <!-- Table body -->\r\n                  <tbody>\r\n                    {#each $filteredUserArray as user}\r\n                    <tr class=\"clickable-row\" on:click={() => openUser(user.id)}>\r\n                      <td class=\"table-entry\">{user.name} {user.surname}</td>\r\n                      <td class=\"table-entry\">{user.email}</td>\r\n                      <td class=\"table-entry\">{user.phone_number}</td>\r\n                      <td class=\"table-entry\">{user.date_of_birth}</td>\r\n                    </tr>\r\n                    {/each}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            {/if}\r\n      \r\n            {#if activeTab === 'programs'}\r\n            <div class=\"user-list-container\">\r\n              <div class=\"file-list\">\r\n                <table class=\"user-table\">\r\n                  <thead class=\"sticky-header\">\r\n                    <tr>\r\n                      <th class=\"table-heading\">Name</th>\r\n                      <th class=\"table-heading\">Created</th>\r\n                      <th class=\"table-heading\">Last Updated</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {#each $filteredProgArray as program}\r\n                    <tr class=\"clickable-row\" on:click={openProfessional(program.id)}>\r\n                      <td class=\"table-entry\">{program.name}</td>\r\n                      <td class=\"table-entry\">{program.created_at}</td>\r\n                      <td class=\"table-entry\">{program.updated_at}</td>\r\n                    </tr>\r\n                    {/each}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            \r\n            {/if}\r\n        </div>\r\n\r\n\r\n        <div class=\"button-container\">\r\n          <button on:click={goBack}>Go Back</button>\r\n          <button on:click={() => openPopup(1)}>Upload Progam</button>\r\n          <button on:click={() => openPopup(2)}>Add User</button>\r\n        </div>\r\n    </div>\r\n    <div id=\"uploadPopup\" class=\"popup\">\r\n      <div class=\"popup-content\">\r\n        <h2>Upload File</h2>\r\n        <input type=\"file\" id=\"fileInput\">\r\n        <input type=\"text\" id=\"userIdInput\" placeholder=\"User ID\" readonly>\r\n        <label>\r\n          <input type=\"checkbox\" id=\"updateCheckbox\">\r\n          Update existing file\r\n        </label>\r\n        <button on:click={uploadFileFromPopup}>Upload</button>\r\n        <button on:click={()=> closePopup(1)}>Close</button>\r\n      </div>\r\n    </div>\r\n    \r\n    <div id=\"addProfPopup\" class=\"popup2\">\r\n      <div class=\"popup-content\">\r\n        <h2>Add Professional</h2>\r\n        <input type=\"text\" id=\"userIdInput2\" placeholder=\"User ID\" readonly>\r\n        <label for=\"updateDropdown\">Select a User:</label>\r\n        <select id=\"updateDropdown\" bind:value={selectedUser}>\r\n          {#each $allUsers as option}\r\n            <option value={option.user_id}>{option.name} {option.surname}</option>\r\n          {/each}\r\n        </select>\r\n        <button on:click={updateProfessionalfromPopup}>Add</button>\r\n        <button on:click={() => closePopup(2)}>Close</button>\r\n      </div>\r\n    </div>\r\n    \r\n    \r\n\r\n\r\n</main>\r\n\r\n<style>\r\n    main {\r\n        padding: 0;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        min-height: 100vh;\r\n        min-width: 100vw;\r\n        margin: 0;\r\n    }\r\n\r\n    .container {\r\n        min-height: 100vh;\r\n        min-width: 100vw;\r\n        margin: 0;\r\n        background-color: #fff;\r\n        padding: 40px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n\r\n    \r\n    button {\r\n        margin-top: 10px;\r\n        background-color: #007bff;\r\n        color: #fff;\r\n        padding: 12px;\r\n        border: none;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n        transition: background-color 0.3s ease;\r\n    }\r\n\r\n    button:hover {\r\n        background-color: #0056b3;\r\n    }\r\n\r\n    .user-details {\r\n    display: flex;\r\n    width: 90%;\r\n    padding: 10px;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n  }\r\n\r\n  .username {\r\n    font-size: 24px;\r\n    margin-bottom: 2px;\r\n  }\r\n\r\n  .user-role {\r\n    font-size: 18px;\r\n    color: #555;\r\n    margin: 3px 0px;\r\n  }\r\n\r\n  .avatar {\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .detail-button {\r\n  padding: 5px;\r\n  background-color: #f2f2f2;\r\n  color: #333;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.detail-button:hover {\r\n  background-color: #e6e6e6;\r\n}\r\n\r\n.card {\r\n  width: 80%;\r\n  padding: 15px;\r\n  margin: 15px;\r\n  margin-top: 0;\r\n  background-color: #f2f2f2;\r\n  border-radius: 4px;\r\n \r\n}\r\n\r\n.card-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.info-row {\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.info-label {\r\n  font-weight: bold;\r\n  margin-right: 8px;\r\n}\r\n\r\n.info-value {\r\n  flex-grow: 1;\r\n}\r\n\r\n.lower-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 90%;\r\n    margin-top: 0px;\r\n    padding-bottom: 10px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    overflow-x: scroll;\r\n  }\r\n\r\n  .tab-selector {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  width: 90%;\r\n}\r\n\r\n.tab-selector input[type=\"text\"] {\r\n  padding: 8px;\r\n  flex: 1;\r\n  margin-right: 10%;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.tab-selector input[type=\"text\"]:focus {\r\n  outline: none;\r\n  border-color: #999;\r\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.tab-selector button {\r\n  padding: 10px 20px;\r\n  background-color: #f2f2f2;\r\n  color: #333;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.tab-selector button.active {\r\n  background-color: #e6e6e6;\r\n}\r\n\r\n  .user-list-container{\r\n    position: relative;\r\n    height: 50vh;\r\n    overflow-y: scroll;\r\n    width: 100%;\r\n  }\r\n\r\n  .button-container {\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n  /*.buttons {\r\n    width: 90%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .add-user-button {\r\n    padding: 8px;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n\r\n  .add-user-button:hover{\r\n    background-color: #0056b3;\r\n  }*/\r\n\r\n\r\n  .user-table {\r\n    table-layout: auto;\r\n    margin-top: 0px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n    min-width: 800px;\r\n    overflow-x: scroll;\r\n}\r\n\r\n.table-heading {\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  \r\n}\r\n\r\n.table-entry {\r\n    text-align: center;\r\n    padding: 16px;\r\n    \r\n  }\r\n\r\ntable td {\r\n  text-align: center;\r\n  padding: 12px;\r\n  \r\n}\r\n.clickable-row {\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n\r\n  .clickable-row:hover {\r\n    background-color: lightgray;\r\n  }\r\n\r\n.sticky-header {\r\n    position: sticky;\r\n    top: 0;\r\n    background-color: #f5f5f5;\r\n  }\r\n\r\n  .popup {\r\n  display: none;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 9999;\r\n}\r\n\r\n.popup2 {\r\n  display: none;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 9999;\r\n}\r\n\r\n.popup-content {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n}\r\n\r\n\r\n\r\n    @media (max-width: 768px) {\r\n        .container {\r\n            max-width: 400px;\r\n            padding: 30px;\r\n        }\r\n    }\r\n</style>\r\n","<script>\r\n  import { addingStatus, allProfs, altProfile, files, programs } from \"../stores\";\r\n  import { fetchFolders, fetchPrograms } from '../fileDbHandling.js';\r\n  import { createEventDispatcher } from 'svelte';\r\n  import { renewFolderExpirationDate } from \"../fileDbHandling.js\";\r\n  import{uploadFileById} from \"../file-handler.js\";\r\n  import { getAltProfile } from \"../fileDbHandling.js\";\r\n  import { profProgs } from \"../stores\";\r\n\r\n  let toggle = false;\r\n  let currentProfile;\r\n  let folders = [];\r\n  let programArray = [];\r\n  let isProgramList = false;\r\n  let user_id = 0;\r\n  let currentFolder;\r\n  let selectedFiles =[];\r\n  \r\n  \r\n  \r\n  const unsubscribeId = altProfile.subscribe(aId => {\r\n    currentProfile = aId;\r\n    user_id = aId.user_id;\r\n    console.log(currentProfile);\r\n    \r\n  });\r\n\r\n  unsubscribeId();\r\n  if(user_id){\r\n    fetchFileHistory();\r\n  }\r\n\r\n  async function fetchFileHistory() {\r\n   \r\n    await fetchFolders(user_id);\r\n    const unsubscribeFiles = files.subscribe(filenames => {\r\n    folders = [...filenames];\r\n    \r\n    });\r\n    unsubscribeFiles();\r\n  }\r\n\r\n \r\n\r\n  const unsubscribePrograms = programs.subscribe(filenames => {\r\n    programArray = [...filenames];\r\n  });\r\n\r\n  async function getFilesTrigger(item){\r\n    currentFolder = item;\r\n    await getFiles();\r\n    toggleView();\r\n  }\r\n  async function getFiles() {\r\n    if(currentFolder){\r\n      await fetchPrograms(currentFolder);\r\n    }\r\n    \r\n  }\r\n\r\n  function toggleView() {\r\n    isProgramList = !isProgramList;\r\n  }\r\n\r\n  function renew(id) {\r\n    console.log(id);\r\n  }\r\n\r\n  function goBack() {\r\n    if (isProgramList) {\r\n      isProgramList = false;\r\n    } else {\r\n      addingStatus.set(0);\r\n    }\r\n  }\r\n\r\n  function toggleDetails() {\r\n    toggle = !toggle;\r\n  }\r\n\r\n//pop up for program renewal\r\n\r\n  let showModal = false;\r\n  let modalContent;\r\n  let modalID;\r\n  let renewDate = '';\r\n  let initDate = '';\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  function openModal(folder) {\r\n    showModal = true;\r\n    modalContent = \"Renew Program\";\r\n    modalID = folder.id;\r\n    initDate = folder.created_at;\r\n    console.log(folder.created_at);\r\n    \r\n  }\r\n\r\n  function closeModal() {\r\n    showModal = false;\r\n    modalContent = '';\r\n  }\r\n\r\n  async function renewProgram() {\r\n    // Call your renewProgram function with the entered date (renewDate)\r\n    // Example: renewProgram(renewDate)\r\n\r\n    // Close the modal after calling the function\r\n    \r\n    let n = calculateDateDifferenceInSeconds(renewDate,initDate);\r\n    \r\n    await renewFolderExpirationDate(n, modalID);\r\n    await fetchFileHistory();\r\n    closeModal();\r\n  }\r\n\r\n  function calculateDateDifferenceInSeconds(renewDate, initDate) {\r\n  const renewDateTime = new Date(renewDate).getTime();\r\n  const initDateTime = new Date(initDate).getTime();\r\n  const differenceInSeconds = Math.floor((renewDateTime - initDateTime) / 1000);\r\n  return differenceInSeconds;\r\n}\r\n\r\nfunction calculateExpiryDate(seconds, date) {\r\n  //console.log(date);\r\n  const parsedDate = new Date(date);\r\n\r\n  if (isNaN(parsedDate) || isNaN(seconds)) {\r\n    //console.log(\"notdate\");\r\n    return null; // Return null or handle the error in an appropriate way\r\n  }\r\n\r\n  const newDate = new Date(parsedDate.getTime() + seconds * 1000);\r\n  const formattedDate = newDate.toISOString().split(\"T\")[0];\r\n\r\n  return formattedDate;\r\n}\r\n\r\nfunction isDateExpired(expiryDate) {\r\n  const currentDate = new Date();\r\n  const expiryDateObj = new Date(expiryDate);\r\n  \r\n  return expiryDateObj < currentDate;\r\n}\r\n\r\nfunction openPopup(n) {\r\n  console.log(\"opening popups\");\r\n  if( n == 1)\r\n  {\r\n    const popup = document.getElementById('uploadPopup');\r\n    //console.log(\"opening popup 1\");\r\n    popup.style.display = 'block';\r\n    const userIdInput = document.getElementById('userIdInput');\r\n    userIdInput.value = currentProfile.user_id;\r\n  }else if(n == 2) {\r\n    const popup = document.getElementById('addProfPopup');\r\n    //console.log(\"opening popup 2\");\r\n    popup.style.display = 'block';\r\n    const userIdInput = document.getElementById('userIdInput2');\r\n    userIdInput.value = currentProfile.user_id;\r\n\r\n  }\r\n  \r\n  //console.log(currentProfile);\r\n}\r\n\r\nfunction closePopup(n) {\r\n  if(n == 1){\r\n    const popup = document.getElementById('uploadPopup');\r\n    popup.style.display = 'none';\r\n  }else if(n == 2){\r\n    const popup = document.getElementById('addProfPopup');\r\n    popup.style.display = 'none';\r\n  }\r\n  \r\n}\r\n\r\nasync function uploadFileFromPopup() {\r\n  const userIdInput = document.getElementById('userIdInput');\r\n  const updateCheckbox = document.getElementById('updateCheckbox');\r\n\r\n  const userId = userIdInput.value;\r\n  const update = updateCheckbox.checked;\r\n  console.log(selectedFiles);\r\n\r\n  for (const file of selectedFiles) {\r\n    if (file && userId) {\r\n      console.log(\"adding\" + file + \" \" + userId);\r\n      await uploadFileById(file, userId, update);\r\n    } else {\r\n      console.error('Please select a file and provide a user ID.');\r\n    }\r\n\r\n    if (file !== selectedFiles[selectedFiles.length - 1]) {\r\n      // Add a delay of 1 second (1000 milliseconds) after each iteration, except the last one\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n    }\r\n  }\r\n\r\n  await fetchFileHistory();\r\n  await getFiles();\r\n  console.log(\"closing\");\r\n  closePopup(1);\r\n}\r\n\r\n\r\n\r\nfunction updateId() {\r\n  const userIdInput = document.getElementById('userIdInput');\r\n    userIdInput.value = currentProfile.id;\r\n    console.log(currentProfile);\r\n\r\n}\r\n\r\nfunction toggleCheckbox(optionId) {\r\n    if (selectedFiles.includes(optionId)) {\r\n      selectedFiles = selectedFiles.filter(id => id !== optionId);\r\n    } else {\r\n      selectedFiles.push(optionId);\r\n    }\r\n    console.log(selectedFiles);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<!-- Rest of the HTML code remains the same -->\r\n\r\n<main>\r\n  <div class=\"container\">\r\n    <div class=\"user-details\">\r\n      <div class=\"user-info\">\r\n        <h3 class=\"username\">{currentProfile.name} {currentProfile.surname}</h3>\r\n        <p class=\"user-role\">User</p>\r\n        <button class=\"detail-button\" on:click={toggleDetails}>Details</button>\r\n      </div>\r\n      <div>\r\n        <img src=\"avatar.png\" alt=\"User Avatar\" class=\"avatar\" />\r\n      </div>\r\n    </div>\r\n\r\n    {#if toggle}\r\n    <div class=\"card\">\r\n      <div class=\"card-content\">\r\n        <div class=\"info-row\">\r\n          <div class=\"info-label\">Email Address:</div>\r\n          <div class=\"info-value\">{currentProfile.email}</div>\r\n        </div>\r\n        <div class=\"info-row\">\r\n          <div class=\"info-label\">Date of Birth:</div>\r\n          <div class=\"info-value\">{currentProfile.date_of_birth}</div>\r\n        </div>\r\n        <div class=\"info-row\">\r\n          <div class=\"info-label\">Phone Number:</div>\r\n          <div class=\"info-value\">{currentProfile.phone_number}</div>\r\n        </div>\r\n        <div class=\"info-row\">\r\n          <div class=\"info-label\">Professional:</div>\r\n          <div class=\"info-value\">{currentProfile.professional}</div>\r\n        </div>\r\n\r\n        <div class=\"info-row\">\r\n          <div class=\"info-label\">Address:</div>\r\n          <div class=\"info-value\">{currentProfile.address}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {/if}\r\n\r\n    <div class=\"lower-container\">\r\n      {#if !isProgramList}\r\n      <div class=\"user-list-container\">\r\n        <div class=\"file-list\">\r\n          <table class=\"user-table\">\r\n            <thead class=\"sticky-header\">\r\n              <tr>\r\n                <th class=\"table-heading\">Name</th>\r\n                <th class=\"table-heading\">Expiry</th>\r\n                <th class=\"table-heading\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {#each folders as folder}\r\n              <tr>\r\n                <td class=\"table-entry clickable-row\" on:click={getFilesTrigger(folder.id)} on:keydown={getFilesTrigger(folder.id)}>{folder.name}</td>             \r\n                \r\n                {#if isDateExpired(calculateExpiryDate(folder.expires_in, folder.created_at))}\r\n                  <td class=\"table-entry expired\">\r\n                    {calculateExpiryDate(folder.expires_in, folder.created_at)}\r\n                  </td>\r\n                {:else}\r\n                  <td class=\"table-entry\">\r\n                    {calculateExpiryDate(folder.expires_in, folder.created_at)}\r\n                  </td>\r\n                {/if}\r\n\r\n                \r\n                <td class=\"table-entry\">\r\n                  <button on:click={openModal(folder)}>Renew</button>\r\n                </td>\r\n              </tr>\r\n              {/each}\r\n            </tbody>\r\n          </table>\r\n          \r\n        </div>\r\n      </div>\r\n      {/if}\r\n\r\n      {#if isProgramList}\r\n      <div class=\"user-list-container\">\r\n        <div class=\"file-list\">\r\n          <table class=\"user-table\">\r\n            <thead class=\"sticky-header\">\r\n              <tr>\r\n                <th class=\"table-heading\">Name</th>\r\n                <th class=\"table-heading\">Created</th>\r\n                <th class=\"table-heading\">Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {#each programArray as program}\r\n              <tr on:click={toggleView}>\r\n                <td class=\"table-entry\">{program.name}</td>\r\n                <td class=\"table-entry\">{program.created_at}</td>\r\n                <td class=\"table-entry\">{program.updated_at}</td>\r\n              </tr>\r\n              {/each}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      {/if}\r\n    </div>\r\n    <div class=\"button-container\">\r\n      <button on:click={goBack}>Go Back</button>\r\n      <button on:click={() => openPopup(1)}>Add Prgram</button>\r\n    </div>\r\n  </div>\r\n\r\n  {#if showModal}\r\n  <div class=\"modal\">\r\n    <div class=\"modal-content\">\r\n      <span class=\"close\" on:click={closeModal} on:keydown={closeModal}>&times;</span>\r\n      <h3>{modalContent}</h3>\r\n      <form on:submit|preventDefault={renewProgram}>\r\n        <label for=\"renewDate\">Renew Date:</label>\r\n        <input type=\"date\" id=\"renewDate\" bind:value={renewDate} required />\r\n        <button type=\"submit\">Renew</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n{/if}\r\n<div id=\"uploadPopup\" class=\"popup\">\r\n  <div class=\"popup-content\">\r\n    <div class=\"row\">\r\n      <input type=\"text\" id=\"userIdInput\" placeholder=\"User ID\" readonly>\r\n      <div class=\"row\">\r\n        <button class=\"button\" on:click={uploadFileFromPopup}>Upload</button>\r\n        <button class=\"button\" on:click={()=> closePopup(1)}>Close</button>\r\n      </div>\r\n      \r\n     \r\n    </div>\r\n    <label>\r\n      <input type=\"checkbox\" id=\"updateCheckbox\">\r\n      Update existing file\r\n    </label>\r\n    <div class=\"file-list\">\r\n      <h1>Select File(s):</h1>\r\n      <div class=\"scrollable-list\">\r\n        {#each $profProgs as option}\r\n          <label>\r\n            <input type=\"checkbox\" on:change={() => toggleCheckbox(option.id)} checked={selectedFiles.includes(option.id)}>\r\n            {option.name}\r\n          </label>\r\n        {/each}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    padding: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n    min-width: 100vw;\r\n    margin: 0;\r\n  }\r\n\r\n    .container {\r\n        min-height: 100vh;\r\n        min-width: 100vw;\r\n        margin: 0;\r\n        background-color: #fff;\r\n        padding: 40px;\r\n        border-radius: 8px;\r\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n\r\n    \r\n    button {\r\n        margin-top: 10px;\r\n        background-color: #007bff;\r\n        color: #fff;\r\n        padding: 12px;\r\n        border: none;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n        transition: background-color 0.3s ease;\r\n    }\r\n\r\n    button:hover {\r\n        background-color: #0056b3;\r\n    }\r\n\r\n    .user-details {\r\n    display: flex;\r\n    width: 90%;\r\n    padding: 10px;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n  }\r\n\r\n  .username {\r\n    font-size: 24px;\r\n    margin-bottom: 2px;\r\n  }\r\n\r\n  .user-role {\r\n    font-size: 18px;\r\n    color: #555;\r\n    margin: 3px 0px;\r\n  }\r\n\r\n  .avatar {\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .detail-button {\r\n  padding: 5px;\r\n  background-color: #f2f2f2;\r\n  color: #333;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.detail-button:hover {\r\n  background-color: #e6e6e6;\r\n}\r\n\r\n.card {\r\n  width: 80%;\r\n  padding: 15px;\r\n  margin: 15px;\r\n  margin-top: 0;\r\n  background-color: #f2f2f2;\r\n  border-radius: 4px;\r\n \r\n}\r\n\r\n.card-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.info-row {\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.info-label {\r\n  font-weight: bold;\r\n  margin-right: 8px;\r\n}\r\n\r\n.info-value {\r\n  flex-grow: 1;\r\n}\r\n\r\n\r\n\r\n.lower-container {\r\n    display: flex;\r\n    flex-direction: row;\r\n    width: 90%;\r\n    margin-top: 20px;\r\n    padding-bottom: 30px;\r\n    justify-content: space-between;\r\n  }\r\n  .user-table {\r\n    table-layout: auto;\r\n    margin-top: 0px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n    min-width: 500px;\r\n    overflow-x: scroll;\r\n}\r\n\r\n.table-heading {\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  \r\n}\r\n\r\n.table-entry {\r\n    text-align: center;\r\n    padding: 16px;\r\n    \r\n  }\r\n\r\ntable td {\r\n  text-align: center;\r\n  padding: 12px;\r\n  \r\n}\r\n.clickable-row {\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n\r\n  .clickable-row:hover {\r\n    background-color: lightgray;\r\n  }\r\n\r\n.sticky-header {\r\n    position: sticky;\r\n    top: 0;\r\n    background-color: #f5f5f5;\r\n  }\r\n\r\n  .user-list-container{\r\n    position: relative;\r\n    height: 60vh;\r\n    overflow-y: scroll;\r\n    width: 100%;\r\n  }\r\n\r\n\r\n  .modal {\r\n    display: block;\r\n    position: fixed;\r\n    z-index: 1;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n  }\r\n\r\n  .modal-content {\r\n    background-color: #fefefe;\r\n    margin: 15% auto;\r\n    padding: 20px;\r\n    border: 1px solid #888;\r\n    width: 80%;\r\n    max-width: 400px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    position: relative;\r\n  }\r\n\r\n  .close {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    color: #aaa;\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n    padding: 4px 8px;\r\n    cursor: pointer;\r\n  }\r\n  .expired {\r\n    color: red;\r\n  }\r\n\r\n\r\n\r\n  .button-container {\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n\r\n\r\n\r\n\r\n  /* Popup styles */\r\n  .popup-content {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n}\r\n.row .button {\r\n  margin-left: 10px;    /* Adjust the value as needed */\r\n  margin-right: 10px;   /* Adjust the value as needed */\r\n}\r\n\r\n\r\n.scrollable-list {\r\n  flex: 1;\r\n  overflow-y: scroll;\r\n  max-height: 100px;\r\n}\r\n\r\n/* Optional: Add styling to enhance the appearance */\r\n#userIdInput {\r\n  margin-right: 10px;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n}\r\n\r\nh1 {\r\n  margin-bottom: 10px;\r\n}\r\n\r\nbutton {\r\n  margin-top: 10px;\r\n}\r\n\r\n.file-list {\r\n  margin-top: 20px;\r\n  flex: 1;\r\n}\r\n\r\n.popup {\r\n  display: none;\r\n  position: fixed;\r\n  top: 0%;\r\n  left: 0%;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 9999;\r\n}\r\n\r\n#uploadPopup {\r\n  height: 100vh;\r\n}\r\n\r\n\r\n    @media (max-width: 768px) {\r\n        .container {\r\n            max-width: 400px;\r\n            padding: 30px;\r\n        }\r\n    }\r\n\r\n\r\n</style>\r\n","<script>\n\timport Router from \"svelte-spa-router\";\n\timport { currentUser } from \"./stores\";\n\timport { addingStatus } from \"./stores\";\n\timport { push } from \"svelte-spa-router\";\n\timport Home from \"./routes/Home.svelte\";\n\timport About from \"./routes/About.svelte\";\n\timport Login from \"./routes/Login.svelte\";\n\timport AddUser from \"./routes/AddUser.svelte\";\n\timport AddProgram from \"./routes/AddProgram.svelte\";\n\timport ModProfessional from \"./routes/ModProfessional.svelte\";\n\timport ModUser from \"./routes/ModUser.svelte\";\n\tlet routes = {\n\t\t\"/\" : Home,\n\t\t\"/about\" : About,\n\t\t\"/login\": Login,\n\t\t\"/add-user\" : AddUser,\n\t\t\"/add-program\": AddProgram,\n\t\t\"/mod-professional\": ModProfessional,\n\t\t\"/mod-user\": ModUser\n\t};\n\n\tif(!$currentUser.loggedIn){\n\t\tpush('/login');\n\t}\n\n\tconst unsubscribe = currentUser.subscribe(value => {\n  \t//console.log('Value changed:', value);\n  \tif(value.loggedIn === true){\n\t\tconst unsubscribeAdder = addingStatus.subscribe(value => {\n\t\t//console.log('Value changed:', value);\n\t\tif(value == 1){\n\t\t\tpush('/add-user');\n\t\t} else if(value == 2){\n\t\t\tpush('/add-program');\n\t\t} else if(value == 3){\n\t\t\tpush('/mod-professional');\n\t\t} else if (value == 4){\n\t\t\tpush('/mod-user');\n\t\t}\n\t\telse{\n\t\t\tpush('/');\n\t\t}\n\t\t});\n\t}else{\n\t\tpush('/login');\n\t}\n\t});\n\n\t\n\n\n\n\t// To unsubscribe from the store's changes:\n\t// unsubscribe();\n</script>\n\n<main>\n\t<Router {routes}/>\n</main>\n\n<style>\n\t main {\n    padding: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n\tmin-width: 100vw;\n    background: linear-gradient(to bottom, #bbfc8c, #77fced);\n    margin: 0;\n  }\n\n  \n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\t\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","set_input_value","input","select_option","select","mounting","option","__value","selected","undefined","selectedIndex","select_value","selected_option","querySelector","construct_svelte_component","props","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","cancelable","bubbles","e","createEvent","initCustomEvent","custom_event","slice","defaultPrevented","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","seen_callbacks","Set","flushidx","saved_component","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","key","get_spread_object","spread_props","create_component","mount_component","customElement","m","new_on_destroy","on_mount","map","filter","destroy_component","filtered","targets","indexOf","flush_render_callbacks","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","splice","$set","$$props","obj","$$set","keys","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","started","values","pending","cleanup","sync","result","unsubscribers","switch_instance_spread_levels","params","getLocation","hashPosition","window","location","href","substr","qsPosition","querystring","loc","$loc","async","charAt","history","replaceState","state","__svelte_spa_router_scrollX","scrollX","__svelte_spa_router_scrollY","scrollY","hash","routes","prefix","restoreScrollState","RouteItem","constructor","path","_sveltesparouter","RegExp","pattern","str","loose","tmp","ext","arr","split","shift","substring","parse","conditions","userData","_pattern","_keys","match","startsWith","matches","exec","out","decodeURIComponent","routesList","route","componentParams","dispatch","dispatchNextTick","previousScrollState","popStateChanged","scrollTo","lastLoc","componentObj","unsubscribeLoc","newLoc","checkConditions","$$invalidate","loading","loadingParams","loaded","default","onDestroy","scrollRestoration","currentUser","user_role","user_id","user_name","loggedIn","files","programs","currentProfile","surname","allUsers","altProfile","allProfs","allSuperProfs","allAdmins","allProgs","profProgs","addingStatus","login","pwd","phone","email","role","gender","dob","address","pocode","filteredUserArray","filteredProfArray","filteredSuperProfArray","filteredAdminArray","filteredProgArray","loginUser","username","password","formData","URLSearchParams","response","fetch","method","body","ok","json","id","reject","error","console","roleMapping","ROLE_ADMIN","ROLE_PROFESSIONAL","ROLE_SUPER_PROFESSIONAL","ROLE_USER","hasOwnProperty","message","alert","signUp","unsubscribeFunctions","loginValue","pwdValue","nameValue","surnameValue","phoneValue","emailValue","roleValue","genderValue","dobValue","addressValue","pocodeValue","unsubscribeLogin","unsubscribePwd","unsubscribeName","unsubscribeSurname","unsubscribePhone","unsubscribeEmail","unsubscribeRole","unsubscribeGender","unsubscribeDob","unsubscribeAddress","unsubscribePocode","JSON","stringify","status","log","catch","select0","select1","main","div3","h1","form","div2","div0","label0","input0","label1","input1","label2","input2","label3","input3","label4","option0","option1","option2","div1","label5","option3","option4","option5","label6","input4","label7","input5","label8","input6","label9","input7","label10","input8","button0","button1","$login","$pwd","$name","$surname","$role","$gender","$dob","$email","$phone","$address","$pocode","fetchFolders","folders","res","fetchPrograms","programsArray","fetchUsers","usersArray","renewFolderExpirationDate","renewDate","folderId","FormData","statusText","updateProfessional","professional_id","t0_value","t2_value","t4_value","t8_value","t12_value","date_of_birth","t16_value","phone_number","t20_value","t24_value","created_at","t28_value","updated_at","t32_value","create_if_block_9","create_if_block_10","div25","div24","div22","h3","div21","div5","div4","div8","div6","div7","div11","div9","div10","div14","div12","div13","div17","div15","div16","div20","div18","div19","div23","t0","t2","t4","t8","t12","t16","t20","t24","t28","t32","if_block0","create_if_block_7","if_block1","create_if_block_6","if_block2","create_if_block_5","if_block3","create_if_block_4","button2","button2_class_value","button3","button3_class_value","button4","button4_class_value","button5","button5_class_value","openForm","table","thead","tbody","t6_value","professional","t10_value","tr","td0","td1","td2","td3","td4","t6","t10","apply","arguments","each_value","create_if_block_2","create_if_block_1","button","folder_name","user_surname","created","create_if_block_8","create_if_block_3","create_if_block","button0_class_value","button1_class_value","i0","p0","i1","p1","i2","p2","closeForm","getElementById","style","display","startIdx","endIdx","userArray","ProfArray","ProgArray","superProfArray","AdminArray","activeTab","activeWindow","searchTerm","currentPage","getProfs","unsubscribeProfs","profs","profsArray","fetchProfs","getAllProfs","getProgs","unsubscribeProgs","progs","progsArray","active","updated","fetchProgs","getAllProgs","getSuperProfs","unsubscribeSuperProfs","superProfsArray","fetchSuperProfs","getAllSuperProfs","getAdmins","unsubscribeAdmins","adminsArray","fetchAdmins","getAllAdmins","getUsers","unsubscribeUsers","users","getAllUsers","openUser","find","user","findUserById","switchTab","tab","switchWindow","handleSearch","toLowerCase","includes","admin","program","fresh","findProfessionalById","popup","t14_value","t14","toggle","myId","prof","unsubProfile","fetchProfProgsById","unsubscribeFiles","getData","t_value","calculateExpiryDate","expires_in","td","t","expiryDate","currentDate","Date","isDateExpired","seconds","date","parsedDate","isNaN","getTime","toISOString","programArray","isProgramList","fetchFileHistory","filenames","toggleView","item","div","header","current","script","head","logout","element_src","url","img","uploadFile","file","userId","uploadFileById","t18_value","t18","span","label","option_value_value","h20","h21","button6","button7","closePopup","selectedProfessional","currentFolder","getFiles","aId","unsubscribeId","modalContent","modalID","showModal","initDate","closeModal","openPopup","folder","renewDateTime","initDateTime","Math","floor","calculateDateDifferenceInSeconds","fileInput","userIdInput","updateCheckbox","checked","button8","button9","selectedUser","prog","findProgramById","fetchProfProgs","t1_value","input_checked_value","t1","selectedFiles","toggleCheckbox","optionId","setTimeout","Home","About","Login","AddUser","AddProgram","ModProfessional","ModUser","$currentUser"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}